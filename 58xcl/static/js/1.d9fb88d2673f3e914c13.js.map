{"version":3,"sources":["webpack:///static/js/1.d9fb88d2673f3e914c13.js","webpack:///./src/views/GradeView.vue","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/core/util.js?430d","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/util/graphic.js?d2ec","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/echarts.js?0b4d","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/util/number.js?2d5f","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/core/vector.js?7e1a","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/Path.js?6887","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/util/model.js?dfec","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/util/format.js?2bc0","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/core/env.js?25d1","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/model/Model.js?c69f","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/util/clazz.js?b5d0","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/core/BoundingRect.js?d936","webpack:///./src/store/api.js?bd93","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/model/Component.js?43be","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/core/matrix.js?2fdd","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/coord/axisHelper.js?7718","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/util/layout.js?9f87","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/contain/text.js?787e","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/core/curve.js?d256","webpack:///Footer.vue?bc38","webpack:///Header.vue?29a6","webpack:///./src/components/Footer.vue?d71e*","webpack:///./src/components/Header.vue?ff6c*","webpack:///./src/components/Header.vue?8b09*","webpack:///./src/components/Footer.vue?6a7d*","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/core/event.js?7928","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/mixin/Eventful.js?f795","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/tool/color.js?e7d1","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/axisPointer/modelHelper.js?0aaf","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/scale/Scale.js?ac45","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/config.js?b0f5","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/container/Group.js?c3a1","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/core/PathProxy.js?2248","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/CoordinateSystem.js?c3b5","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/model/mixin/makeStyleMapper.js?1c4b","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/scale/Interval.js?50b4","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/util/component.js?7aff","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/util/symbol.js?7203","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/core/timsort.js?c2bb","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/Displayable.js?027a","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/Gradient.js?8711","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/chart/helper/Symbol.js?1ce8","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/chart/helper/createListFromArray.js?eb80","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/axisPointer/findPointFromSeries.js?3625","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/axisPointer/globalListener.js?f1c8","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/axisPointer/viewHelper.js?4685","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/axis/AxisBuilder.js?aa45","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/axis/AxisView.js?9d4c","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/axis/cartesianAxisHelper.js?2e4b","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/coord/Axis.js?7f78","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/coord/axisModelCommonMixin.js?154a","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/coord/cartesian/AxisModel.js?5f1e","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/data/List.js?11bf","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/data/helper/completeDimensions.js?2212","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/model/Series.js?7096","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/model/mixin/colorPalette.js?8a8d","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/scale/helper.js?2be9","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/util/throttle.js?8a8f","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/view/Chart.js?0d9d","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/Element.js?dc75","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/animation/Animator.js?777d","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/animation/requestAnimationFrame.js?e97f","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/contain/util.js?0538","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/core/LRU.js?b9db","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/core/guid.js?bb25","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/core/log.js?cdc3","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/Image.js?6e62","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/Pattern.js?e2d6","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/Style.js?c2e8","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/helper/poly.js?3bfc","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/mixin/Transformable.js?4828","webpack:///Charts.vue?bef5","webpack:///ColorNumber.vue?d5b2","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/ExtensionAPI.js?869f","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/chart/helper/SymbolDraw.js?e93c","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/chart/line.js?a6bd","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/chart/line/LineSeries.js?8c31","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/chart/line/LineView.js?0954","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/chart/line/lineAnimationDiff.js?69cc","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/chart/line/poly.js?4c38","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/axis.js?51fc","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/axisPointer.js?0299","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/axisPointer/AxisPointerModel.js?ac8d","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/axisPointer/AxisPointerView.js?f6c4","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/axisPointer/BaseAxisPointer.js?8aa9","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/axisPointer/CartesianAxisPointer.js?965e","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/axisPointer/axisTrigger.js?c30e","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/axis/CartesianAxisView.js?f793","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/gridSimple.js?885f","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/helper/listComponent.js?596a","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/legend.js?c442","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/legend/LegendModel.js?79df","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/legend/LegendView.js?3aab","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/legend/legendAction.js?f680","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/legend/legendFilter.js?0b8e","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/tooltip.js?fa42","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/tooltip/TooltipContent.js?41b1","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/tooltip/TooltipModel.js?983c","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/component/tooltip/TooltipView.js?2a7b","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/coord/axisDefault.js?184d","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/coord/axisModelCreator.js?a35e","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/coord/cartesian/Axis2D.js?f07e","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/coord/cartesian/Cartesian.js?426d","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/coord/cartesian/Cartesian2D.js?e216","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/coord/cartesian/Grid.js?f8e4","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/coord/cartesian/GridModel.js?77ff","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/coord/cartesian/axisLabelInterval.js?627e","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/data/DataDiffer.js?0191","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/helper.js?da03","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/layout/points.js?79a4","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/loading/default.js?9aec","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/model/Global.js?6910","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/model/OptionManager.js?4c64","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/model/globalDefault.js?ce52","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/model/mixin/areaStyle.js?a954","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/model/mixin/boxLayout.js?6bfd","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/model/mixin/itemStyle.js?c65f","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/model/mixin/lineStyle.js?5bf8","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/model/mixin/textStyle.js?d2af","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/preprocessor/backwardCompat.js?d737","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/preprocessor/helper/compatStyle.js?27da","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/processor/dataSample.js?1de1","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/scale/Log.js?b82e","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/scale/Ordinal.js?cbe6","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/scale/Time.js?a3ed","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/view/Component.js?a7c6","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/visual/seriesColor.js?b533","webpack:///./~/.npminstall/echarts/3.5.3/echarts/lib/visual/symbol.js?ca70","webpack:///./src/components/Charts.vue?b041","webpack:///./src/components/ColorNumber.vue?47e3","webpack:///./src/components/ColorNumber.vue?d04a*","webpack:///./src/components/Charts.vue?0093*","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/Handler.js?3ad9","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/Layer.js?ea96","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/Painter.js?64d2","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/Storage.js?dcf7","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/animation/Animation.js?f15d","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/animation/Clip.js?61fc","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/animation/easing.js?1877","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/contain/arc.js?c855","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/contain/cubic.js?3f53","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/contain/line.js?9e1a","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/contain/path.js?ef51","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/contain/quadratic.js?1779","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/contain/windingLine.js?4f7c","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/core/GestureMgr.js?3344","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/core/bbox.js?51ca","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/dom/HandlerProxy.js?84d8","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/CompoundPath.js?4c98","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/LinearGradient.js?37cc","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/RadialGradient.js?cc02","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/Text.js?654c","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/helper/roundRect.js?49d3","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/helper/smoothBezier.js?d10b","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/helper/smoothSpline.js?90bf","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/mixin/RectText.js?699e","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/shape/Arc.js?6d5e","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/shape/BezierCurve.js?9087","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/shape/Circle.js?b75c","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/shape/Line.js?4619","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/shape/Polygon.js?e05f","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/shape/Polyline.js?15f8","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/shape/Rect.js?eef2","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/shape/Ring.js?b32f","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/shape/Sector.js?ff1f","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/mixin/Animatable.js?06e7","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/mixin/Draggable.js?aff3","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/tool/path.js?ffbd","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/tool/transformPath.js?2151","webpack:///./~/.npminstall/zrender/3.4.3/zrender/lib/zrender.js?a250","webpack:///GradeBar.vue","webpack:///GradeView.vue","webpack:///./src/components/GradeBar.vue?2b37","webpack:///./src/components/GradeBar.vue?e6d7","webpack:///./src/components/GradeBar.vue","webpack:///./src/views/GradeView.vue?fae0","webpack:///./src/components/GradeBar.vue?588c"],"names":["webpackJsonp","Array","concat","module","exports","__webpack_require__","Component","clone","source","result","typeStr","objToString","call","i","len","length","TYPED_ARRAY","constructor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","createCanvas","document","createElement","getContext","_ctx","util","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","curry","this","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","slice","Function","assert","condition","message","Error","setAsPrimitive","primitiveKey","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","noop","hasFillOrStroke","fillOrStroke","liftColor","color","colorTool","lift","cacheElementStl","el","__hoverStlDirty","stroke","style","fill","hoverStyle","__hoverStl","normalStyle","name","__normalStl","doSingleEnterHover","__isHover","useHoverLayer","__zr","addHover","setStyle","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","traverse","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","e","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","animateOrSetProps","isUpdate","props","animatableModel","dataIndex","isAnimationEnabled","postfix","duration","getShallow","animationEasing","animationDelay","getAnimationDelayParams","animateTo","stopAnimation","attr","zrUtil","pathTool","round","Math","Path","matrix","vector","Transformable","BoundingRect","graphic","Group","Image","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","extendShape","opts","extendPath","pathData","extendFromString","makePath","rect","layout","path","createFromString","boundingRect","getBoundingRect","aspect","width","height","cx","x","cy","y","resizePath","mergePath","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","subPixelOptimize","shape","lineWidth","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","max","position","positiveOrNegative","doubledPosition","setHoverStyle","opt","hoverSilentOnTouch","on","setText","textStyle","labelModel","labelPosition","labelOffset","labelColor","textStyleModel","getModel","textDistance","textFont","getFont","textPosition","textOffset","textFill","getTextColor","updateProps","initProps","getTransform","ancestor","mat","identity","mul","getLocalTransform","parent","transform","invert","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","isGroup","anid","oldEl","newProp","global","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","theme","prioritySortFunc","a","b","prio","themeStorage","id","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","_throttledZrFlush","throttle","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","_api","createExtensionAPI","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","_onframe","doConvertPixel","methodName","finder","ecModel","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","__DEV__","console","warn","updateDirectly","ecIns","payload","mainType","subType","callView","view","__alive","__model","query","eachComponent","model","index","__viewId","doDispatchAction","silent","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","item","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","updateZ","eachSeries","seriesModel","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","add","__id","__ecComponentInfo","componentIndex","remove","dispose","splice","processData","process","stackSeriesData","stackedDataMap","series","stack","get","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","render","chartView","storage","elCount","env","node","ignore","frameDrawNum","needProgressive","progressive","floor","blendMode","canvasSupported","z","zlevel","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","getComponent","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","window","GlobalModel","OptionManager","ComponentModel","SeriesModel","ACTION_REG","off","one","echartsProto","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","__lastOnlyGraphic","o","optionPreprocessorFuncs","setTheme","log","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","pixelRatio","backgroundColor","list","getDisplayList","getDataURL","excludeComponents","excludesComponentViews","self","url","toDataURL","getConnectedDataURL","groupId","mathMin","min","mathMax","MAX_NUMBER","Infinity","left","top","right","bottom","canvasList","canvas","getBoundingClientRect","targetCanvas","img","image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","getItemVisual","getViewOfComponentModel","getViewOfSeriesModel","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","cfg","hideLoading","loadingEffects","browser","weChat","MOUSE_EVENT_NAMES","eveName","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","isDisposed","_disposed","clear","idBase","Date","groupIdBase","echarts","version","dependencies","replace","nodeName","toUpperCase","clientWidth","clientHeight","setAttribute","connect","disConnect","disconnect","getInstanceByDom","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processorFunc","isNaN","registerPostUpdate","postUpdateFunc","registerAction","test","registerCoordinateSystem","CoordinateSystem","register","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","List","Model","Axis","number","format","helper","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","_trim","str","quantityExponent","val","LN10","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","match","parseFloat","NaN","precision","returnStr","toFixed","asc","arr","sort","getPrecision","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","dataQuantity","sizeQuantity","isFinite","MAX_SAFE_INTEGER","remRadian","radian","pi2","PI","isRadianAroundZero","TIME_REG","getTimezoneOffset","parseDate","exec","timezoneOffset","timeOffset","quantity","pow","nice","nf","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","ArrayCtor","Float32Array","out","copy","set","v1","v2","scaleAndAdd","sqrt","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","lengthSquare","dist","distSquare","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","text","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","strokeNoScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirty","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","extendFrom","defaultShape","thisShape","has","formatUtil","nubmerUtil","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","LABEL_OPTIONS","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","createDataFormatModel","dataFormatMixin","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","seriesId","seriesName","$vars","getFormattedLabel","dimIndex","itemModel","getItemModel","formatter","formatTpl","formatTooltip","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","makeGetter","hostObj","parsedKey","queryType","includeMainTypes","queryParam","queryComponents","numberUtil","textContain","addCommas","toCamelCase","upperCaseFirst","group1","charAt","normalizeCssArray","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","tpl","paramsList","encode","seriesLen","alias","k","formatTplSimple","s2d","formatTime","isUTC","date","utc","M","h","capitalFirst","substr","truncateText","navigator","os","ua","firefox","ie","edge","touchEventsSupported","pointerEventsSupported","userAgent","parentModel","doGet","pathArr","getParent","getParentMethod","clazzUtil","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","Ctor","setReadOnly","properties","customizeGetParent","enableClassExtend","checkClassType","superCall","superApply","IS_CONTAINER","host","hasOwn","ret","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","enableClassManagement","entity","options","makeContainer","container","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","__webpack_exports__","BASE_URL","jsonp","success","encodeURIComponent","JSON","jsonpCallback","random","script","getElementsByTagName","src","appendChild","json","undefined","removeChild","request","API","getJournalismtList","page","countPerPage","fn","getJournalismtById","getFundGrades","investmentStrategy","productType","establishTime","togetherRating","incomeRating","normalRiskRating","extremeRiskRating","isAsc","order","getFundIndexBaseByType","SiMuWangCompanyByCompanySID","sid","getCompanyFundGrades","fullTextSearch","kw","SEARCH_URL","getSiMuWangProductInfoBySID","getPrivateFundGrade","getProductNets","getCSI","beginTime","endTime","getFundIndexByType","getSiMuWangManagerBySID","psid","SiMuWangCompanyBySID","getDependencies","deps","arrayPush","componentUtil","defaultOption","dependentModels","uid","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","sin","ct","cos","vx","vy","det","OrdinalScale","IntervalScale","Scale","axisHelper","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","setBlank","getNeedCrossZero","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","getInterval","intervalScale","origin","setInterval","createScaleByModel","axisType","getCategories","ifAxisCrossZero","axis","getAxisLabelInterval","tickCoords","labels","font","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","HV_NAMES","box","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","hResult","vResult","copyLayoutParams","getTextWidth","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","getTextRect","textAlign","textBaseline","textLineLen","lineHeight","adjustTextPositionOnRect","textRect","textHeight","halfHeight","ellipsis","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","join","charCode","charCodeAt","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","THREE_SQRT","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","defineProperty","bottomNav","$route","bottomNavColor","methods","handleChange","$router","__WEBPACK_IMPORTED_MODULE_0__store_api__","title","default","dataSource","links","open","showBackBtn","handlechange","querySelector","display","toggle","back","handleInput","_this","results","lp","_vm","_h","$createElement","_c","_self","attrs","titleClass","slot","_v","_s","staticStyle","icon","click","_e","docked","label","labelFloat","input","change","staticRenderFns","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","stop","preventDefault","stopPropagation","cancelBubble","returnValue","Dispatcher","arrySlice","_$handlers","isSilent","newList","argLen","triggerWithContext","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseInt","parseCssFloat","cssHueToRgb","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastMapToColor","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","mapToColor","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","collectAxesInfo","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","axesInfo","useHandle","seriesModels","axesInfoInCoordSys","seriesInvolved","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysAxesInfo","coordSysMap","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","show","crossStyle","lineStyle","collectSeriesInfo","seriesTooltipTrigger","getAxis","dim","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","collect","fixValue","getAxisInfo","reverse","isBlank","getAxisPointerModel","setting","_setting","_extent","_interval","scaleProto","getSetting","unionExtent","unionExtentFromData","getDataExtent","start","end","thisExtent","_isBlank","config","debugMode","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","offset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","excludes","includes","propName","roundNumber","_intervalPrecision","niceTicks","_niceExtent","intervalScaleGetTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","callback","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","Triangle","Diamond","Pin","angle","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","line","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","size","symbolBuildProxies","Symbol","symbolType","beforeBrush","textVerticalAlign","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","symbolUtil","createSymbol","symbolPath","setColor","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","rectHover","afterBrush","rectContain","coord","animateStyle","useStyle","Gradient","addColorStop","getSymbolSize","symbolSize","getScale","seriesScope","updateData","driftSymbol","drift","symbolProto","_createSymbol","hostModel","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","highlight","downplay","setZ","setDraggable","_updateCommon","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","hasItemOption","getItemStyle","elStyle","opacity","valueDim","dimensions","getDimensionInfo","onEmphasis","ratio","onNormal","fadeOut","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","getDimensionsInfo","completeDimensions","defaultNames","categoryIndex","nameList","createNameList","categories","dimValueGetter","dimName","categoryAxesModels","initData","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","stackable","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","point","getItemGraphicEl","getTooltipPosition","dataToPoint","getValues","coordDimToDataDim","initGlobalListeners","useHandler","dis","makeDispatchAction","records","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","pendingList","globalListener","unregister","confineInContainer","viewWidth","viewHeight","AxisBuilder","buildElStyle","axisPointerType","styleModel","getLineStyle","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","align","verticalAlign","bgColor","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","seriesDataIndices","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","dataToCoord","labelDirection","labelMargin","buildCartesianSingleLabelElOption","textLayout","innerTextLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","inverse","onLeft","tooltipOpt","fixMinMaxLabelShow","textEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","isTwoLabelOverlapped","current","labelLayout","firstRect","nextRect","mRotationBack","nameDirection","tickDirection","dumbGroup","updateTransform","_transform","_dumbGroup","hasBuilder","builders","getGroup","axisLine","pt1","pt2","lineCap","axisTick","tickModel","lineStyleModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","ifIgnoreOnTick","axisLabel","axisLabelShow","labelRotation","labelRotate","categoryData","triggerEvent","tickVal","itemTextStyleModel","textColor","pos","labelStr","textEl","targetType","decomposeTransform","axisName","nameLocation","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","tooltip","content","axisRotation","textRotation","rawTick","updateAxisPointer","axisView","forceRender","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","axisPointerClazz","registerAxisPointerClass","gridModel","getZero","theAxis","grid","toGlobalCoord","rawAxisPosition","axisPosition","onZero","axisDim","getRect","rectBound","axisOffset","posMap","dirMap","labelInside","getLabelInterval","fixExtentWithBands","nTick","normalizedExtent","onBand","containData","coordToData","pointToData","alignWithLabel","bands","getBands","coords","getLabelsCoords","getBandWidth","axisExtent","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","getAxisType","axisModelCreator","AxisModel","gridIndex","gridId","extraOption","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","transferProperties","_storage","originalStorage","dimStore","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","time","DataDiffer","TRANSFERABLE_PROPERTIES","__wrappedMethods","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","getDimension","dimensionInfoMap","idList","nameRepeatCount","DataCtor","stackedValue","dimData","dimExtent","getSum","sum","rawIndex","indicesOfNearest","maxDistance","nearestIndices","minDist","minDiff","diff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","eachItemGraphicEl","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","dimCount","value0","retrieveValue","extraPrefix","guessOrdinal","classUtil","colorPaletteMixin","legendDataProvider","visualColorAccessPath","getInitialData","fillDataTextStyle","newSeriesOption","getLinkedData","getRawData","coordDim","dataDimToCoordDim","dataDim","getBaseAxis","multipleSeries","formattedValue","valStr","colorEl","animationEnabled","getColorFromPalette","scope","getAxisTooltipData","colorIdx","colorNameMap","colorPalette","fixExtent","lib","ORIGIN_METHOD","RATE","delay","debounce","lastExec","getTime","timer","currCall","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","Chart","elSetState","state","toggleHighlight","dataIdx","chartProto","guid","Animatable","clipPath","beforeUpdate","afterUpdate","hide","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","createTrackClip","animator","easing","oneTrackDone","keyframes","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","lastValue","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","PI2","normalizeRadian","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","idStart","ZImage","globalImageCache","_image","cachedImgObj","onload","pending","sWidth","sHeight","drawImage","repeat","createPattern","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","textStroke","textShadowBlur","textShadowOffsetX","textShadowOffsetY","textTransform","blend","prevStyle","firstDraw","styleName","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","smoothSpline","smoothBezier","points","smooth","controlPoints","smoothConstraint","cp1","cp2","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","atan2","transformCoordToGlobal","__WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts__","__WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts___default","randomId","now","watch","drawChart","myChart","getElementById","instance","legend","legend1","legend2","xAxis","yAxis","data1","data2","mounted","num","Boolean","computed","html","chartInstance","echartsAPIList","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","oldData","_data","SymbolCtor","newIdx","symbolEl","oldIdx","execute","enableAnimation","legendHoverLink","clipOverflow","smoothMonotone","symbol","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","getGlobalExtent","halfBandWidth","dir","sign","getStackedOnPoints","baseAxis","valueAxis","getOtherAxis","valueStart","baseDataOffset","stackedOnSameSign","stackedData","createGridClipShape","cartesian","hasAnimation","xExtent","yExtent","isHorizontal","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","pt","stepPt","middle","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","minCoord","maxCoord","coordSpan","unshift","gradient","lineAnimationDiff","polyHelper","lineGroup","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","stackedOnSmooth","categoryAxis","getAxesByScale","isLabelIgnored","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","v2Copy","cp0","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","vec2Min","vec2Max","getBoundingBox","ptMin","ptMax","stackedOnBBox","axisTrigger","link","tooltipOption","highDownKey","AxisPointerModel","triggerOn","animationDurationUpdate","shadowStyle","padding","borderColor","borderWidth","handle","AxisPonterView","disopse","BaseAxisPointer","animationModel","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","createIcon","handleModel","handlers","iconStr","updateMandatoryProps","eventTool","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerOption","pointer","pointerEl","updateHandleTransform","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","doClear","buildLabel","getCartesian","getAxisDimIndex","viewHelper","cartesianAxisHelper","CartesianAxisPointer","otherExtent","pixelValue","pointerShapeBuilder","currPosition","cursorOtherValue","tooltipOptions","targetShape","shadow","bandWidth","findPointFromSeries","shouldHide","illegalPoint","outputFinder","showValueMap","dataByCoordSys","highlightBatch","updaters","showPointer","showTooltip","coordSysContainsPoint","notTargetAxis","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","axisIndex","axisId","valueLabelOpt","valItem","lastHighlights","newHighlights","toHighlight","toDownplay","isTarget","vals","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","axisBuilder","_splitLine","splitLineModel","lineColors","lineInterval","gridRect","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","areaStyle","positionGroup","getBoxLayoutParams","addBackground","LegendModel","selected","_updateData","legendData","hasSelected","isSelected","select","availableNames","getSeries","_availableNames","unSelect","toggleSelected","itemGap","itemWidth","itemHeight","inactiveColor","selectedMode","dispatchSelectAction","dispatchHighlightAction","dataName","dispatchDownplayAction","symbolCreator","listComponentHelper","_symbolTypeStore","legendModel","selectMode","itemAlign","legendDrawedMap","getSeriesByName","legendSymbolType","_createItem","eachRawSeries","itemGroup","itemIcon","tooltipModel","legendGlobalTooltipModel","textX","hitRect","legendIndex","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","legendModels","findComponents","filterSeries","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","cssText","fontSize","assembleCssText","transitionDuration","zrColor","borderName","camelCase","TooltipContent","_x","_y","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","innerHTML","setContent","setEnterable","enterable","getSize","viewportRoot","getViewportRoot","offsetLeft","offsetTop","isShow","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","borderRadius","extraCssText","animationEasingUpdate","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","confineTooltipPosition","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","layoutUtil","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","cbTicket","vAlign","viewSize","layoutRect","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","nameRotate","nameTruncate","nameTextStyle","nameGap","inside","splitLine","splitArea","timeAxis","logAxis","logBase","axisDefault","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","axisLabelInterval","Axis2D","coordExtent","_labelInterval","toLocalCoord","dimAxisMapper","_axes","Cartesian","_dimList","addAxis","_dataCoordConvert","dimList","output","Cartesian2D","axisX","axisY","dataToPoints","isAxisUsedInTheGrid","getLabelUnionRect","labelCount","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","updateAxisTransfrom","coordBase","axisExtentSum","findAxesModels","axesTypes","isCartesian2D","gridProto","ifAxisCanNotOnZero","otherAxisDim","axes","axesMap","_updateScale","adjustAxes","axesList","labelUnionRect","axesMapOnDim","xAxisIndex","yAxisIndex","coordList","getCartesians","_findConvertTarget","coordsList","createAxisCreator","axisPositionUsed","axesCount","otherAxis","grids","containLabel","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetter","existence","_add","_update","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","axisModelCommonMixin","createList","createScale","mixinAxisModelCommonMethods","eachSeriesByType","maskColor","mask","labelRect","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","components","cpt","assertSeriesInitialized","_optionManager","onlyGraphic","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","resultItem","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","oneSeries","getSeriesByType","rawSeriesIndex","eachRawSeriesByType","isSeriesFiltered","filteredSeries","componentTypes","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","platform","fontFamily","fontStyle","fontWeight","animationDuration","progressiveThreshold","useUTC","getBorderLineDash","lineType","getLineDash","dotSize","dashSize","gTextStyleModel","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","seriesOpt","clockWise","pointerColor","dataRange","visualMap","componentName","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","markPoint","markLine","mpData","mlData","samplers","average","nearest","indexSampler","sampler","fixRoundingError","originalVal","roundingErrorFix","intervalScaleProto","mathFloor","mathCeil","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","err","rank","scaleHelper","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","ONE_SECOND","ONE_MINUTE","ONE_DAY","componentProto","encodeColor","colorAccessPath","defaultSymbolType","legendSymbol","itemSymbolType","itemSymbolSize","domProps","makeEventPacket","eveType","targetInfo","topTarget","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","Handler","proxy","painterRoot","_hovered","_lastTouchMoment","mousemove","lastHovered","hovered","hoveredTarget","lastHoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","eventArgs","setCursorStyle","cursorStyle","eventHandler","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downel","_upel","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","save","fillRect","restore","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","clipPaths","prevClipPaths","doClip","createRoot","domRoot","Painter","root","singleCanvas","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","paintAll","_paintList","refreshHover","_startProgessive","__hoverMir","elMirror","__from","hoverElements","clearHover","hoverLayer","displayableSortFunc","getLayer","originalEl","_doPaintEl","token","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","clearLayer","imageLayer","displayList","whIdx","cwh","plt","prb","pathToImage","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","shapeCompareFunc","Storage","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","addRoot","delRoot","_renderList","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","remainder","arg","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","_l","_a","_b","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","windingLine","cubic","quadratic","pointPair","center","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchCenter","extremity","fromPoints","xDim","yDim","tx","ty","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","handlerDomProxyProto","paths","_updatePathDirty","globalCoord","strokeText","fillText","r1","r2","r3","r4","total","v2Min","v2Max","v2Scale","v2Distance","v2Add","isLoop","constraint","prevPoint","nextPoint","cps","d0","interpolate","segs","w2","w3","maxValue","lastIndexOf","baseline","textShadowColor","unitX","unitY","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","curveTool","pointAt","tangentAt","roundRectHelper","shadowTemp","modified","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","vMag","pathEls","pathList","pathEl","pathBundle","nPoint","mathAtan2","delInstance","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","rendererType","vml","handerProxy","_needsRefresh","oldDelFromStorage","oldAddToStorage","zLevel","_needsRefreshHover","refreshHoverImmediately","clearAnimation","__WEBPACK_IMPORTED_MODULE_0__components_Footer_vue__","__WEBPACK_IMPORTED_MODULE_0__components_Footer_vue___default","__WEBPACK_IMPORTED_MODULE_1__components_Header_vue__","__WEBPACK_IMPORTED_MODULE_1__components_Header_vue___default","__WEBPACK_IMPORTED_MODULE_2__components_GradeBar_vue__","__WEBPACK_IMPORTED_MODULE_2__components_GradeBar_vue___default","__WEBPACK_IMPORTED_MODULE_3__components_ColorNumber_vue__","__WEBPACK_IMPORTED_MODULE_3__components_ColorNumber_vue___default","__WEBPACK_IMPORTED_MODULE_4__components_Charts_vue__","__WEBPACK_IMPORTED_MODULE_4__components_Charts_vue___default","__WEBPACK_IMPORTED_MODULE_5__store_api__","gradeData","managerData","teamData","stockData1","createChart","_getCsi","localStorage","getItem","USE_CACHE","setItem","code","loading","_this2","ds","rts","substring","cn","temp1","temp2","_this3","_this4","GlobalFooter","GlobalHeader","GradeBar","ColorNumber","Charts","sources","mappings","file","sourcesContent","sourceRoot","locals","staticClass","pn","subTitle","nn","tn","ic1","fd","rs","is","tr","nrr","cr","sr","mtr","showCheckbox","ir2","tyir2","tyyp","ftir","ftyp","ftir1","ftyp1","feir","feyp","colspan","mn","wy","wb","yai","tai","white-space","line-height","cd","cp","ca","ed","class"],"mappings":"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","file":"static/js/1.d9fb88d2673f3e914c13.js","sourcesContent":["webpackJsonp([1],Array(21).concat([\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(6)(\n  /* script */\n  __webpack_require__(204),\n  /* template */\n  __webpack_require__(231),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(27);\n\n    var pathTool = __webpack_require__(194);\n    var round = Math.round;\n    var Path = __webpack_require__(32);\n    var colorTool = __webpack_require__(54);\n    var matrix = __webpack_require__(41);\n    var vector = __webpack_require__(31);\n    var Transformable = __webpack_require__(97);\n    var BoundingRect = __webpack_require__(38);\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(58);\n\n    graphic.Image = __webpack_require__(93);\n\n    graphic.Text = __webpack_require__(178);\n\n    graphic.Circle = __webpack_require__(185);\n\n    graphic.Sector = __webpack_require__(191);\n\n    graphic.Ring = __webpack_require__(190);\n\n    graphic.Polygon = __webpack_require__(187);\n\n    graphic.Polyline = __webpack_require__(188);\n\n    graphic.Rect = __webpack_require__(189);\n\n    graphic.Line = __webpack_require__(186);\n\n    graphic.BezierCurve = __webpack_require__(184);\n\n    graphic.Arc = __webpack_require__(183);\n\n    graphic.CompoundPath = __webpack_require__(175);\n\n    graphic.LinearGradient = __webpack_require__(176);\n\n    graphic.RadialGradient = __webpack_require__(177);\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(35);\n\n    var GlobalModel = __webpack_require__(138);\n    var ExtensionAPI = __webpack_require__(100);\n    var CoordinateSystemManager = __webpack_require__(60);\n    var OptionManager = __webpack_require__(139);\n\n    var ComponentModel = __webpack_require__(40);\n    var SeriesModel = __webpack_require__(81);\n\n    var ComponentView = __webpack_require__(152);\n    var ChartView = __webpack_require__(85);\n    var graphic = __webpack_require__(28);\n    var modelUtil = __webpack_require__(33);\n    var throttle = __webpack_require__(84);\n\n    var zrender = __webpack_require__(196);\n    var zrUtil = __webpack_require__(27);\n    var colorTool = __webpack_require__(54);\n    var Eventful = __webpack_require__(53);\n    var timsort = __webpack_require__(65);\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs, this.__lastOnlyGraphic);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.5.3',\n        dependencies: {\n            zrender: '3.4.3'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(153));\n    echarts.registerPreprocessor(__webpack_require__(146));\n    echarts.registerLoading('default', __webpack_require__(137));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = __webpack_require__(79);\n    echarts.Model = __webpack_require__(36);\n\n    echarts.Axis = __webpack_require__(76);\n\n    echarts.graphic = __webpack_require__(28);\n    echarts.number = __webpack_require__(30);\n    echarts.format = __webpack_require__(34);\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(41);\n    echarts.vector = __webpack_require__(31);\n    echarts.color = __webpack_require__(54);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = __webpack_require__(135);\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = __webpack_require__(66);\n    var zrUtil = __webpack_require__(27);\n    var PathProxy = __webpack_require__(59);\n    var pathContain = __webpack_require__(169);\n\n    var Pattern = __webpack_require__(94);\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                // var rect = this.getBoundingRect();\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(34);\n    var nubmerUtil = __webpack_require__(30);\n    var Model = __webpack_require__(36);\n    var zrUtil = __webpack_require__(27);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(27);\n    var numberUtil = __webpack_require__(30);\n    var textContain = __webpack_require__(44);\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(27);\n    var clazzUtil = __webpack_require__(37);\n    var env = __webpack_require__(35);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(144));\n    mixin(Model, __webpack_require__(141));\n    mixin(Model, __webpack_require__(145));\n    mixin(Model, __webpack_require__(143));\n\n    module.exports = Model;\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(27);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = __webpack_require__(31);\n    var matrix = __webpack_require__(41);\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\nvar BASE_URL = 'https://www.58xcl.com/ns';\nvar SEARCH_URL = 'https://www.58xcl.com/qs/qs';\n\nvar jsonp = function jsonp(url, data, success) {\n  data = encodeURIComponent(window.JSON.stringify(data));\n  var jsonpCallback = 'jsonpCallback' + new Date() * 1 + Math.floor(Math.random() * 10000);\n  var script = document.createElement('script');\n  var h = document.getElementsByTagName('head')[0];\n  if (url.indexOf('?') > -1) {\n    url += '&CallBack=' + jsonpCallback + '&data=' + data;\n  } else {\n    url += '?CallBack=' + jsonpCallback + '&data=' + data;\n  }\n  script.src = url;\n  h.appendChild(script);\n  window[jsonpCallback] = window[jsonpCallback] || function (json) {\n    window[jsonpCallback] = undefined;\n    try {\n      delete window[jsonpCallback];\n    } catch (e) {}\n    if (h) {\n      h.removeChild(script);\n    }\n    success(json);\n  };\n};\n\nvar request = {\n  func: 'function',\n  params: {}\n};\n\nvar API = {\n  getJournalismtList: function getJournalismtList(type, page, countPerPage, fn) {\n    request.func = 'getJournalismtList';\n    request.params['t'] = type;\n    request.params['p'] = page;\n    request.params['cpp'] = countPerPage;\n    jsonp(BASE_URL + '/consult?f=t', request, fn);\n  },\n  getJournalismtById: function getJournalismtById(id, fn) {\n    request.func = 'getJournalismtById';\n    request.params['id'] = id;\n    jsonp(BASE_URL + '/consult?f=t', request, fn);\n  },\n  getFundGrades: function getFundGrades(investmentStrategy, productType, establishTime, togetherRating, incomeRating, normalRiskRating, extremeRiskRating, type, isAsc, page, countPerPage, order, fn) {\n    request.func = 'getFundGrades';\n    request.params['is'] = investmentStrategy;\n    request.params['pt'] = productType;\n    request.params['et'] = establishTime;\n    request.params['tr'] = togetherRating;\n    request.params['ir'] = incomeRating;\n    request.params['nrr'] = normalRiskRating;\n    request.params['err'] = extremeRiskRating;\n    request.params['t'] = type;\n    request.params['ia'] = isAsc;\n    request.params['p'] = page;\n    request.params['cpp'] = countPerPage;\n    request.params['o'] = order;\n    jsonp(BASE_URL + '/datagrade?f=t', request, fn);\n  },\n  getFundIndexBaseByType: function getFundIndexBaseByType(type, fn) {\n    request.func = 'getFundIndexBaseByType';\n    request.params['t'] = type;\n    jsonp(BASE_URL + '/datagrade?f=t', request, fn);\n  },\n  SiMuWangCompanyByCompanySID: function SiMuWangCompanyByCompanySID(sid, fn) {\n    request.func = 'SiMuWangCompanyByCompanySID';\n    request.params['csid'] = sid;\n    jsonp(BASE_URL + '/datagrade?f=t', request, fn);\n  },\n  getCompanyFundGrades: function getCompanyFundGrades(sid, fn) {\n    request.func = 'getCompanyFundGrades';\n    request.params['sid'] = sid;\n    jsonp(BASE_URL + '/datagrade?f=t', request, fn);\n  },\n  fullTextSearch: function fullTextSearch(kw, fn) {\n    jsonp(SEARCH_URL + '?func=fullTextSearch&kw=' + kw + '&t=0&p=1&c=8', request, fn);\n  },\n  getSiMuWangProductInfoBySID: function getSiMuWangProductInfoBySID(sid, fn) {\n    request.func = 'getSiMuWangProductInfoBySID';\n    request.params['psid'] = sid;\n    jsonp(BASE_URL + '/datacapture?f=t', request, fn);\n  },\n  getPrivateFundGrade: function getPrivateFundGrade(sid, fn) {\n    request.func = 'getPrivateFundGrade';\n    request.params['sid'] = sid;\n    jsonp(BASE_URL + '/datagrade?f=t', request, fn);\n  },\n  getProductNets: function getProductNets(sid, fn) {\n    request.func = 'getProductNets';\n    request.params['sid'] = sid;\n    jsonp(BASE_URL + '/datagrade?f=t', request, fn);\n  },\n  getCSI: function getCSI(beginTime, endTime, fn) {\n    request.func = 'getCSI';\n    request.params['bt'] = beginTime;\n    request.params['et'] = endTime;\n    jsonp(BASE_URL + '/product?f=t', request, fn);\n  },\n  getFundIndexByType: function getFundIndexByType(type, fn) {\n    request.func = 'getFundIndexByType';\n    request.params['t'] = type;\n    request.params['g'] = 0;\n    jsonp(BASE_URL + '/datagrade?f=t', request, fn);\n  },\n  getSiMuWangManagerBySID: function getSiMuWangManagerBySID(psid, fn) {\n    request.func = 'getSiMuWangManagerBySID';\n    request.params['psid'] = psid;\n    jsonp(BASE_URL + '/datagrade?f=t', request, fn);\n  },\n  SiMuWangCompanyBySID: function SiMuWangCompanyBySID(psid, fn) {\n    request.func = 'SiMuWangCompanyBySID';\n    request.params['psid'] = psid;\n    jsonp(BASE_URL + '/datagrade?f=t', request, fn);\n  }\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = (API);\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(36);\n    var zrUtil = __webpack_require__(27);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(63);\n    var clazzUtil = __webpack_require__(37);\n    var layout = __webpack_require__(43);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(142));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(150);\n    var IntervalScale = __webpack_require__(62);\n    __webpack_require__(151);\n    __webpack_require__(149);\n    var Scale = __webpack_require__(56);\n\n    var numberUtil = __webpack_require__(30);\n    var zrUtil = __webpack_require__(27);\n    var textContain = __webpack_require__(44);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(27);\n    var BoundingRect = __webpack_require__(38);\n    var numberUtil = __webpack_require__(30);\n    var formatUtil = __webpack_require__(34);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = __webpack_require__(27);\n    var BoundingRect = __webpack_require__(38);\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(31);\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  data: function data() {\n    return {\n      bottomNav: this.$route.path,\n      bottomNavColor: 'home'\n    };\n  },\n\n  methods: {\n    handleChange: function handleChange(val) {\n      this.bottomNav = val;\n      this.$router.push(val);\n    }\n  }\n});\n\n/***/ }),\n/* 47 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__store_api__ = __webpack_require__(39);\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  props: {\n    title: {\n      type: String,\n      default: '新策略'\n    }\n  },\n  data: function data() {\n    return {\n      dataSource: [],\n      links: [],\n      open: false,\n      value: '',\n      showBackBtn: ['Index', 'Grade', 'News', 'Exponent'].indexOf(this.$route.name) === -1\n    };\n  },\n\n  methods: {\n    handlechange: function handlechange(val) {\n      this.open = false;\n\n      document.querySelector('.mu-overlay').style.display = 'none';\n      this.$router.push('/grade/' + this.links[this.dataSource.indexOf(val)]);\n    },\n    toggle: function toggle() {\n      this.open = !this.open;\n    },\n    back: function back() {\n      this.$router.back();\n    },\n    handleInput: function handleInput(val) {\n      var _this = this;\n\n      this.dataSource = [];\n      this.links = [];\n      __WEBPACK_IMPORTED_MODULE_0__store_api__[\"a\" /* default */].fullTextSearch(val, function (d) {\n        if (d.results && d.results.length) {\n          d.results.forEach(function (item, index) {\n            _this.dataSource.push(item.k);\n            _this.links.push(item.lp);\n          });\n        }\n      });\n    }\n  }\n});\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(6)(\n  /* script */\n  __webpack_require__(46),\n  /* template */\n  __webpack_require__(51),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(6)(\n  /* script */\n  __webpack_require__(47),\n  /* template */\n  __webpack_require__(50),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"header\"\n    }\n  }, [_c('mu-appbar', {\n    attrs: {\n      \"titleClass\": \"center\"\n    }\n  }, [_c('div', {\n    slot: \"default\"\n  }, [_vm._v(_vm._s(_vm.title))]), _vm._v(\" \"), (_vm.showBackBtn) ? _c('mu-icon-button', {\n    staticStyle: {\n      \"position\": \"absolute\"\n    },\n    attrs: {\n      \"icon\": \"arrow_back\"\n    },\n    on: {\n      \"click\": _vm.back\n    },\n    slot: \"left\"\n  }) : _vm._e(), _vm._v(\" \"), _c('mu-icon-button', {\n    staticStyle: {\n      \"position\": \"absolute\",\n      \"right\": \"10px\"\n    },\n    attrs: {\n      \"icon\": \"search\"\n    },\n    on: {\n      \"click\": _vm.toggle\n    },\n    slot: \"right\"\n  })], 1), _vm._v(\" \"), _c('mu-drawer', {\n    attrs: {\n      \"open\": _vm.open,\n      \"docked\": false\n    },\n    on: {\n      \"close\": _vm.toggle\n    }\n  }, [_c('mu-auto-complete', {\n    attrs: {\n      \"label\": \"请输入基金关键词\",\n      \"labelFloat\": \"\",\n      \"value\": _vm.value,\n      \"dataSource\": _vm.dataSource,\n      \"filter\": \"noFilter\"\n    },\n    on: {\n      \"input\": _vm.handleInput,\n      \"change\": _vm.handlechange\n    }\n  })], 1)], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"footer\"\n    }\n  }, [_c('mu-paper', [_c('mu-bottom-nav', {\n    attrs: {\n      \"value\": _vm.bottomNav\n    },\n    on: {\n      \"change\": _vm.handleChange\n    }\n  }, [_c('mu-bottom-nav-item', {\n    attrs: {\n      \"value\": \"/\",\n      \"title\": \"主页\",\n      \"icon\": \"home\"\n    }\n  }), _vm._v(\" \"), _c('mu-bottom-nav-item', {\n    attrs: {\n      \"value\": \"/grade\",\n      \"title\": \"评级\",\n      \"icon\": \"equalizer\"\n    }\n  }), _vm._v(\" \"), _c('mu-bottom-nav-item', {\n    attrs: {\n      \"value\": \"/exponent\",\n      \"title\": \"指数\",\n      \"icon\": \"trending_up\"\n    }\n  }), _vm._v(\" \"), _c('mu-bottom-nav-item', {\n    attrs: {\n      \"value\": \"/news\",\n      \"title\": \"资讯\",\n      \"icon\": \"rss_feed\"\n    }\n  })], 1)], 1)], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = __webpack_require__(53);\n    var env = __webpack_require__(35);\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = __webpack_require__(90);\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(27);\n    var Model = __webpack_require__(36);\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(\n                    labelOption.textStyle || (labelOption.textStyle = {}),\n                    crossStyle.textStyle\n                );\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(37);\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports) {\n\n\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = __webpack_require__(27);\n    var Element = __webpack_require__(86);\n    var BoundingRect = __webpack_require__(38);\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = __webpack_require__(45);\n    var vec2 = __webpack_require__(31);\n    var bbox = __webpack_require__(173);\n    var BoundingRect = __webpack_require__(38);\n    var dpr = __webpack_require__(57).devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(27);\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(27);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(30);\n    var formatUtil = __webpack_require__(34);\n    var Scale = __webpack_require__(56);\n    var helper = __webpack_require__(83);\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(extent, splitNumber);\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(27);\n    var clazz = __webpack_require__(37);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(28);\n    var BoundingRect = __webpack_require__(38);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = __webpack_require__(27);\n\n    var Style = __webpack_require__(95);\n\n    var Element = __webpack_require__(86);\n    var RectText = __webpack_require__(182);\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = __webpack_require__(27);\n    var symbolUtil = __webpack_require__(64);\n    var graphic = __webpack_require__(28);\n    var numberUtil = __webpack_require__(30);\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        // Get last value dim\n        var dimensions = data.dimensions.slice();\n        var valueDim;\n        var dataType;\n        while (dimensions.length && (\n            valueDim = dimensions.pop(),\n            dataType = data.getDimensionInfo(valueDim).type,\n            dataType === 'ordinal' || dataType === 'time'\n        )) {} // jshint ignore:line\n\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'normal'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n\n        if (valueDim != null && hoverLabelModel.getShallow('show')) {\n            graphic.setText(hoverItemStyle, hoverLabelModel, color);\n            hoverItemStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'emphasis'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            hoverItemStyle.text = '';\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(79);\n    var completeDimensions = __webpack_require__(80);\n    var zrUtil = __webpack_require__(27);\n    var modelUtil = __webpack_require__(33);\n    var CoordinateSystem = __webpack_require__(60);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, {defaultNames: dimensions.concat(['value'])});\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, {defaultNames: ['x', 'y', 'z']});\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, {defaultNames: ['radius', 'angle', 'value']});\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, {defaultNames: ['lng', 'lat', 'value']})\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(27);\n    var modelUtil = __webpack_require__(33);\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(35);\n    var zrUtil = __webpack_require__(27);\n    var get = __webpack_require__(33).makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(27);\n    var graphic = __webpack_require__(28);\n    var textContain = __webpack_require__(44);\n    var formatUtil = __webpack_require__(34);\n    var matrix = __webpack_require__(41);\n    var axisHelper = __webpack_require__(42);\n    var AxisBuilder = __webpack_require__(73);\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var textStyleModel = labelModel.getModel('textStyle');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = textStyleModel.getFont();\n        var textRect = textContain.getBoundingRect(\n            text, font, labelPos.textAlign, labelPos.textBaseline\n        );\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            style: {\n                text: text,\n                textFont: font,\n                textFill: textStyleModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            }\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(27);\n    var formatUtil = __webpack_require__(34);\n    var graphic = __webpack_require__(28);\n    var Model = __webpack_require__(36);\n    var numberUtil = __webpack_require__(30);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(31);\n    var matrix = __webpack_require__(41);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.textVerticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function'\n                            ? textColor(\n                                // (1) In category axis with data zoom, tick is not the original\n                                // index of axis.data. So tick should not be exposed to user\n                                // in category axis.\n                                // (2) Compatible with previous version, which always returns labelStr.\n                                // But in interval scale labelStr is like '223,445', which maked\n                                // user repalce ','. So we modify it to return original val but remain\n                                // it as 'string' to avoid error in replacing.\n                                axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                                index\n                            )\n                            : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.textVerticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisPointerModelHelper = __webpack_require__(55);\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = __webpack_require__(29).extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(27);\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(30);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(27);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(27);\n    var axisHelper = __webpack_require__(42);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var ComponentModel = __webpack_require__(40);\n    var zrUtil = __webpack_require__(27);\n    var axisModelCreator = __webpack_require__(127);\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, __webpack_require__(77));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(36);\n    var DataDiffer = __webpack_require__(134);\n\n    var zrUtil = __webpack_require__(27);\n    var modelUtil = __webpack_require__(33);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(27);\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Object} [opt]\n     * @param  {Array.<string>} [opt.defaultNames] Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param  {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, opt) {\n        if (!data) {\n            return dimensions;\n        }\n\n        opt = opt || {};\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = zrUtil.isArray(value0) && value0.length || 1;\n        }\n\n        var defaultNames = opt.defaultNames || [];\n        var extraPrefix = opt.extraPrefix || 'extra';\n        for (var i = 0; i < dimCount; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(27);\n    var formatUtil = __webpack_require__(34);\n    var classUtil = __webpack_require__(37);\n    var modelUtil = __webpack_require__(33);\n    var ComponentModel = __webpack_require__(40);\n    var colorPaletteMixin = __webpack_require__(82);\n    var env = __webpack_require__(35);\n    var layout = __webpack_require__(43);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(37);\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * For testable.\n */\n\n\n    var numberUtil = __webpack_require__(30);\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = numberUtil.getPrecisionSafe(interval) + 2;\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(58);\n    var componentUtil = __webpack_require__(63);\n    var clazzUtil = __webpack_require__(37);\n    var modelUtil = __webpack_require__(33);\n    var zrUtil = __webpack_require__(27);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/Element\n */\n\n\n    var guid = __webpack_require__(91);\n    var Eventful = __webpack_require__(53);\n    var Transformable = __webpack_require__(97);\n    var Animatable = __webpack_require__(192);\n    var zrUtil = __webpack_require__(27);\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = __webpack_require__(164);\n    var color = __webpack_require__(54);\n    var util = __webpack_require__(27);\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = (\n                isValueArray\n                && isArrayLike(firstVal[0])\n            )\n            ? 2 : 1;\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = (typeof window !== 'undefined' &&\n                                    (window.requestAnimationFrame\n                                    || window.msRequestAnimationFrame\n                                    || window.mozRequestAnimationFrame\n                                    || window.webkitRequestAnimationFrame))\n                                || function (func) {\n                                    setTimeout(func, 16);\n                                };\n\n\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports) {\n\n\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var config = __webpack_require__(57);\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = __webpack_require__(66);\n    var BoundingRect = __webpack_require__(38);\n    var zrUtil = __webpack_require__(27);\n\n    var LRU = __webpack_require__(90);\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports) {\n\n\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var smoothSpline = __webpack_require__(181);\n    var smoothBezier = __webpack_require__(180);\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = __webpack_require__(41);\n    var vector = __webpack_require__(31);\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n/***/ }),\n/* 98 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts__ = __webpack_require__(29);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts__);\n\n\n\n__webpack_require__(102);\n__webpack_require__(122);\n__webpack_require__(117);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'charts',\n  props: {\n    height: {\n      type: [Number, String],\n      default: 200\n    },\n    data: {\n      type: Object\n    }\n  },\n  data: function data() {\n    return {\n      randomId: 'chart_' + (Date.now() + Math.ceil(Math.random() * 10000))\n    };\n  },\n\n  watch: {\n    data: function data() {\n      this.drawChart();\n    }\n  },\n  methods: {\n    drawChart: function drawChart() {\n      var _this = this;\n      var myChart = __WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts___default.a.init(document.getElementById(this.randomId));\n      this.instance = myChart;\n      var defaultOption = {\n        color: ['#8352F2', '#FF4081'],\n        tooltip: {\n          trigger: 'axis',\n          formatter: '{b0}<br/>{a0} : {c0}<br/>{a1} : {c1}'\n        },\n        legend: {\n          data: [_this.data.legend1, _this.data.legend2]\n        },\n        grid: {\n          x: 40,\n          y: 30,\n          x2: 20,\n          y2: 20\n        },\n        xAxis: {\n          data: _this.data.date\n        },\n        yAxis: {},\n        series: [{\n          name: _this.data.legend1,\n          type: 'line',\n          data: _this.data.data1\n        }, {\n          name: _this.data.legend2,\n          type: 'line',\n          data: _this.data.data2\n        }]\n      };\n      myChart.showLoading();\n\n      if (this.data.data2 === undefined || this.data.data2.length === 0) {\n        defaultOption.tooltip.formatter = '{a} {b} : {c}';\n        defaultOption.legend.data.splice(1, 1);\n        defaultOption.series.splice(1, 1);\n      }\n\n      myChart.setOption(defaultOption);\n      myChart.hideLoading();\n    }\n  },\n  mounted: function mounted() {}\n});\n\n/***/ }),\n/* 99 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'color-number',\n  data: function data() {\n    return {};\n  },\n\n  props: {\n    num: {\n      type: [Number, String],\n      default: 0\n    },\n    percent: {\n      type: [Boolean],\n      default: true\n    },\n    color: {\n      type: Boolean,\n      default: true\n    }\n  },\n  computed: {\n    html: function html() {\n      if (this.color) {\n        if (this.percent) {\n          return this.num >= 0 ? '<a>' + (this.num * 100).toFixed(2) + '%</a>' : '<a class=\"green\">' + (this.num * 100).toFixed(2) + '%</a>';\n        } else {\n          return this.num >= 0 ? '<a>' + this.num.toFixed(4) + '</a>' : '<a class=\"green\">' + this.num.toFixed(4) + '</a>';\n        }\n      } else {\n        if (this.percent) {\n          return (this.num * 100).toFixed(2) + '%';\n        } else {\n          return this.num.toFixed(4);\n        }\n      }\n    }\n  }\n});\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(27);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = __webpack_require__(28);\n    var Symbol = __webpack_require__(68);\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(27);\n    var echarts = __webpack_require__(29);\n    var PRIORITY = echarts.PRIORITY;\n\n    __webpack_require__(103);\n    __webpack_require__(104);\n\n    echarts.registerVisual(zrUtil.curry(\n        __webpack_require__(154), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(136), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        __webpack_require__(148), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    __webpack_require__(115);\n\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var createListFromArray = __webpack_require__(69);\n    var SeriesModel = __webpack_require__(81);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME step not support polar\n\n\n    var zrUtil = __webpack_require__(27);\n    var SymbolDraw = __webpack_require__(101);\n    var Symbol = __webpack_require__(68);\n    var lineAnimationDiff = __webpack_require__(105);\n    var graphic = __webpack_require__(28);\n    var modelUtil = __webpack_require__(33);\n    var polyHelper = __webpack_require__(106);\n    var ChartView = __webpack_require__(85);\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports) {\n\n\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Poly path support NaN point\n\n\n    var Path = __webpack_require__(32);\n    var vec2 = __webpack_require__(31);\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// TODO boundaryGap\n\n\n    __webpack_require__(78);\n\n    __webpack_require__(114);\n\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(29);\n    var axisPointerModelHelper = __webpack_require__(55);\n    var axisTrigger = __webpack_require__(113);\n    var zrUtil = __webpack_require__(27);\n\n    __webpack_require__(109);\n    __webpack_require__(110);\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    __webpack_require__(112);\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, function (payload, ecModel, api) {\n        var outputFinder = axisTrigger(\n            ecModel.getComponent('axisPointer').coordSysAxesInfo,\n            payload.currTrigger,\n            [payload.x, payload.y],\n            payload,\n            payload.dispatchAction || zrUtil.bind(api.dispatchAction, api),\n            ecModel,\n            api,\n            payload.tooltipOption,\n            payload.highDownKey\n        );\n\n        return outputFinder;\n    });\n\n\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(29);\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                textStyle: {\n                    color: '#fff'\n                },\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var globalListener = __webpack_require__(71);\n\n    var AxisPonterView = __webpack_require__(29).extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(27);\n    var clazzUtil = __webpack_require__(37);\n    var graphic = __webpack_require__(28);\n    var get = __webpack_require__(33).makeGetter();\n    var axisPointerModelHelper = __webpack_require__(55);\n    var eventTool = __webpack_require__(52);\n    var throttle = __webpack_require__(84);\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = createIcon(handleModel, {\n                    onmousemove: function (e) {\n                        // Fot mobile devicem, prevent screen slider on the button.\n                        eventTool.stop(e.event);\n                    },\n                    onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                    drift: bind(this._onHandleDragMove, this),\n                    ondragend: bind(this._onHandleDragEnd, this)\n                });\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var payload = {\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                highDownKey: 'axisPointerHandle'\n            };\n            var axis = this._axisModel.axis;\n            payload[axis.dim + 'AxisId'] = this._axisModel.id;\n            this._api.dispatchAction(payload);\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals &= propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function createIcon(handleModel, handlers) {\n        var iconStr = handleModel.get('icon');\n        var style = {\n            x: -1, y: -1, width: 2, height: 2\n        };\n        var opt = zrUtil.extend({\n            style: {\n                strokeNoScale: true\n            },\n            rectHover: true,\n            cursor: 'move',\n            draggable: true\n        }, handlers);\n\n        return iconStr.indexOf('image://') === 0\n            ? (\n                style.image = iconStr.slice(8),\n                opt.style = style,\n                new graphic.Image(opt)\n            )\n            : graphic.makePath(\n                iconStr.replace('path://', ''),\n                opt,\n                style,\n                'center'\n            );\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(28);\n    var BaseAxisPointer = __webpack_require__(111);\n    var viewHelper = __webpack_require__(72);\n    var cartesianAxisHelper = __webpack_require__(75);\n    var AxisView = __webpack_require__(74);\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(27);\n    var modelUtil = __webpack_require__(33);\n    var modelHelper = __webpack_require__(55);\n    var findPointFromSeries = __webpack_require__(70);\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {string} [currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [point] x and y, which are mandatory, specify a point to\n     *              tigger axisPointer and tooltip.\n     * @param {Object} [finder] {xAxisId: ...[], yAxisName: ...[], angleAxisIndex: ...[]}\n     *              These properties, which are optional, restrict target axes.\n     * @param {Function} dispatchAction\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [tooltipOption]\n     * @param {string} [highDownKey]\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(\n        coordSysAxesInfo, currTrigger, point, finder, dispatchAction,\n        ecModel, api, tooltipOption, highDownKey\n    ) {\n        finder = finder || {};\n        if (!point || point[0] == null || point[1] == null) {\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var highlightBatch = [];\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys),\n            highlight: curry(highlight, highlightBatch)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            var coordSysContainsPoint = coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                if (!shouldHide && coordSysContainsPoint && !notTargetAxis(finder, axis)) {\n                    processOnAxis(axisInfo, axis.pointToData(point), updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo);\n        dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction);\n        dispatchHighDownActually(highlightBatch, dispatchAction, api, highDownKey);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.highlight('highlight', payloadBatch);\n        updaters.showPointer(axisInfo, newValue, payloadBatch);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function highlight(highlightBatch, actionType, batch) {\n        highlightBatch.push.apply(highlightBatch, batch);\n    }\n\n    function updateModelActually(showValueMap, axesInfo) {\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: tooltipOption,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(highlightBatch, dispatchAction, api, highDownKey) {\n        // Basic logic: If nothing highlighted, should downplay all highlighted items.\n        // This case will occur when mouse leave coordSys.\n\n        // FIXME\n        // (1) highlight status shoule be managemented in series.getData()?\n        // (2) If axisPointer A triggerOn 'handle' and axisPointer B triggerOn\n        // 'mousemove', items highlighted by A will be downplayed by B.\n        // It will not be fixed until someone requires this scenario.\n\n        // Consider items area hightlighted by 'handle', and globalListener may\n        // downplay all items (including just highlighted ones) when mousemove.\n        // So we use a highDownKey to separate them as a temporary solution.\n        var zr = api.getZr();\n        highDownKey = 'lastHighlights' + (highDownKey || '');\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Build hash map and remove duplicate incidentally.\n        zrUtil.each(highlightBatch, function (batchItem) {\n            var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n            newHighlights[key] = batchItem;\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function notTargetAxis(finder, axis) {\n        var isTarget = 1;\n        // If none of xxxAxisId and xxxAxisName and xxxAxisIndex exists in finder,\n        // no axis is not target axis.\n        each(finder, function (value, propName) {\n            isTarget &= !(/^.+(AxisId|AxisName|AxisIndex)$/.test(propName));\n        });\n        !isTarget && each(\n            [['AxisId', 'id'], ['AxisIndex', 'componentIndex'], ['AxisName', 'name']],\n            function (prop) {\n                var vals = modelUtil.normalizeToArray(finder[axis.dim + prop[0]]);\n                isTarget |= zrUtil.indexOf(vals, axis.model[prop[1]]) >= 0;\n            }\n        );\n        return !isTarget;\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(27);\n    var graphic = __webpack_require__(28);\n    var AxisBuilder = __webpack_require__(73);\n    var AxisView = __webpack_require__(74);\n    var cartesianAxisHelper = __webpack_require__(75);\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(28);\n    var zrUtil = __webpack_require__(27);\n    var echarts = __webpack_require__(29);\n\n    __webpack_require__(131);\n\n    __webpack_require__(107);\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    // List layout\n    var layout = __webpack_require__(43);\n    var formatUtil = __webpack_require__(34);\n    var graphic = __webpack_require__(28);\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Legend component entry file8\n */\n\n\n    __webpack_require__(118);\n    __webpack_require__(120);\n    __webpack_require__(119);\n\n    var echarts = __webpack_require__(29);\n    // Series Filter\n    echarts.registerProcessor(__webpack_require__(121));\n\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(27);\n    var Model = __webpack_require__(36);\n\n    var LegendModel = __webpack_require__(29).extendComponentModel({\n\n        type: 'legend',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 'top',\n            // bottom: 'top',\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(27);\n    var symbolCreator = __webpack_require__(64);\n    var graphic = __webpack_require__(28);\n    var listComponentHelper = __webpack_require__(116);\n\n    var curry = zrUtil.curry;\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    module.exports = __webpack_require__(29).extendComponentView({\n\n        type: 'legend',\n\n        init: function () {\n            this._symbolTypeStore = {};\n        },\n\n        render: function (legendModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!legendModel.get('show')) {\n                return;\n            }\n\n            var selectMode = legendModel.get('selectedMode');\n            var itemAlign = legendModel.get('align');\n\n            if (itemAlign === 'auto') {\n                itemAlign = (legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical')\n                    ? 'right' : 'left';\n            }\n\n            var legendDrawedMap = {};\n\n            zrUtil.each(legendModel.getData(), function (itemModel) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (name === '' || name === '\\n') {\n                    group.add(new graphic.Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawedMap[name]) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawedMap[name] = true;\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawedMap[name]) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawedMap[name] = true;\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawedMap[name]) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n\n            listComponentHelper.layout(group, legendModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, legendModel);\n        },\n\n        _createItem: function (\n            name, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new graphic.Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            // Text\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            var text = new graphic.Text({\n                style: {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textFont: textStyleModel.getFont(),\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                }\n            });\n            itemGroup.add(text);\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n\n\n            this.group.add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            return itemGroup;\n        }\n    });\n\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Legend action\n */\n\n\n    var echarts = __webpack_require__(29);\n    var zrUtil = __webpack_require__(27);\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (name in selectedMap) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports) {\n\n\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(108);\n\n    __webpack_require__(124);\n\n    __webpack_require__(125);\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(29).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(29).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(27);\n    var zrColor = __webpack_require__(54);\n    var eventUtil = __webpack_require__(52);\n    var formatUtil = __webpack_require__(34);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(35);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRoot;\n            if (zr && zr.painter && (viewportRoot = zr.painter.getViewportRoot())) {\n                x += viewportRoot.offsetLeft || 0;\n                y += viewportRoot.offsetTop || 0;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(29).extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(123);\n    var zrUtil = __webpack_require__(27);\n    var formatUtil = __webpack_require__(34);\n    var numberUtil = __webpack_require__(30);\n    var graphic = __webpack_require__(28);\n    var findPointFromSeries = __webpack_require__(70);\n    var layoutUtil = __webpack_require__(43);\n    var env = __webpack_require__(35);\n    var Model = __webpack_require__(36);\n    var globalListener = __webpack_require__(71);\n    var axisHelper = __webpack_require__(42);\n    var axisPointerViewHelper = __webpack_require__(72);\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    __webpack_require__(29).extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(27);\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n    var logAxis = zrUtil.defaults({\n        logBase: 10\n    }, valueAxis);\n    logAxis.scale = true;\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisDefault = __webpack_require__(126);\n    var zrUtil = __webpack_require__(27);\n    var ComponentModel = __webpack_require__(40);\n    var layout = __webpack_require__(43);\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(27);\n    var Axis = __webpack_require__(76);\n    var axisLabelInterval = __webpack_require__(133);\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                labelInterval = this._labelInterval = axisLabelInterval(this);\n            }\n            return labelInterval;\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = __webpack_require__(27);\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(27);\n    var Cartesian = __webpack_require__(129);\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = __webpack_require__(43);\n    var axisHelper = __webpack_require__(42);\n\n    var zrUtil = __webpack_require__(27);\n    var Cartesian2D = __webpack_require__(130);\n    var Axis2D = __webpack_require__(128);\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    __webpack_require__(132);\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            grid.resize(gridModel, api);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    __webpack_require__(60).register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    __webpack_require__(78);\n\n    var ComponentModel = __webpack_require__(40);\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Helper function for axisLabelInterval calculation\n */\n\n\n\n    var zrUtil = __webpack_require__(27);\n    var axisHelper = __webpack_require__(42);\n\n    module.exports = function (axis) {\n        var axisModel = axis.model;\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelInterval = labelModel.get('interval');\n        if (!(axis.type === 'category' && labelInterval === 'auto')) {\n            return labelInterval === 'auto' ? 0 : labelInterval;\n        }\n\n        return axisHelper.getAxisLabelInterval(\n            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\n            axisModel.getFormattedLabels(),\n            labelModel.getModel('textStyle').getFont(),\n            axis.isHorizontal()\n        );\n    };\n\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var createListFromArray = __webpack_require__(69);\n    var symbolUtil = __webpack_require__(64);\n    var axisHelper = __webpack_require__(42);\n    var axisModelCommonMixin = __webpack_require__(77);\n    var Model = __webpack_require__(36);\n    var util = __webpack_require__(27);\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * Complete the dimensions array guessed from the data structure.\n         * @param  {Array.<string>} dimensions Necessary dimensions, like ['x', 'y']\n         * @param  {Array} data Data list. [[1, 2, 3], [2, 3, 4]]\n         * @param  {Object} [opt]\n         * @param  {Array.<string>} [opt.defaultNames] Default names to fill not necessary dimensions, like ['value']\n         * @param  {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n         * @param  {number} [opt.dimCount] If not specified, guess by the first data item.\n         * @return {Array.<string>}\n         */\n        completeDimensions: __webpack_require__(80),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys) {\n                var dims = coordSys.dimensions;\n\n                if (dims.length === 1) {\n                    data.each(dims[0], function (x, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                    });\n                }\n                else if (dims.length === 2) {\n                    data.each(dims, function (x, y, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(\n                            idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                        );\n                    }, true);\n                }\n            }\n        });\n    };\n\n\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(28);\n    var zrUtil = __webpack_require__(27);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(27);\n    var modelUtil = __webpack_require__(33);\n    var Model = __webpack_require__(36);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(40);\n\n    var globalDefault = __webpack_require__(140);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs, onlyGraphic) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null, onlyGraphic);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type, onlyGraphic) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    // If only graphic, other series and component will not\n                    // go through update process, data should not be restored.\n                    // Otherwise grphic els mounted on data will be eliminated\n                    // and downplay will not work.\n                    !onlyGraphic && this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {series: []};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(82));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(27);\n    var modelUtil = __webpack_require__(33);\n    var ComponentModel = __webpack_require__(40);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(61)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(61)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(61)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(44);\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(27);\n    var compatStyle = __webpack_require__(147);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(27);\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports) {\n\n\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n/***/ }),\n/* 149 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(27);\n    var Scale = __webpack_require__(56);\n    var numberUtil = __webpack_require__(30);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(62);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(27);\n    var Scale = __webpack_require__(56);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n/* 151 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = __webpack_require__(27);\n    var numberUtil = __webpack_require__(30);\n    var formatUtil = __webpack_require__(34);\n    var scaleHelper = __webpack_require__(83);\n\n    var IntervalScale = __webpack_require__(62);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n/* 152 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(58);\n    var componentUtil = __webpack_require__(63);\n    var clazzUtil = __webpack_require__(37);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n/* 153 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(67);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n/* 154 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 155 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(6)(\n  /* script */\n  __webpack_require__(98),\n  /* template */\n  __webpack_require__(158),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 156 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(6)(\n  /* script */\n  __webpack_require__(99),\n  /* template */\n  __webpack_require__(157),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 157 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('span', {\n    domProps: {\n      \"innerHTML\": _vm._s(_vm.html)\n    }\n  })\n},staticRenderFns: []}\n\n/***/ }),\n/* 158 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    style: ('height:' + _vm.height + 'px;'),\n    attrs: {\n      \"id\": _vm.randomId\n    }\n  })\n},staticRenderFns: []}\n\n/***/ }),\n/* 159 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = __webpack_require__(27);\n    var Draggable = __webpack_require__(193);\n\n    var Eventful = __webpack_require__(53);\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n/***/ }),\n/* 160 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = __webpack_require__(27);\n    var config = __webpack_require__(57);\n    var Style = __webpack_require__(95);\n    var Pattern = __webpack_require__(94);\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n/***/ }),\n/* 161 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = __webpack_require__(57);\n    var util = __webpack_require__(27);\n    var log = __webpack_require__(92);\n    var BoundingRect = __webpack_require__(38);\n    var timsort = __webpack_require__(65);\n\n    var Layer = __webpack_require__(160);\n\n    var requestAnimationFrame = __webpack_require__(88);\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = __webpack_require__(93);\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n/***/ }),\n/* 162 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = __webpack_require__(27);\n    var env = __webpack_require__(35);\n\n    var Group = __webpack_require__(58);\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = __webpack_require__(65);\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n/***/ }),\n/* 163 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = __webpack_require__(27);\n    var Dispatcher = __webpack_require__(52).Dispatcher;\n\n    var requestAnimationFrame = __webpack_require__(88);\n\n    var Animator = __webpack_require__(87);\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n/***/ }),\n/* 164 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = __webpack_require__(165);\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n/***/ }),\n/* 165 */\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n/***/ }),\n/* 166 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var normalizeRadian = __webpack_require__(89).normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n/***/ }),\n/* 167 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(45);\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 168 */\n/***/ (function(module, exports) {\n\n\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 169 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var CMD = __webpack_require__(59).CMD;\n    var line = __webpack_require__(168);\n    var cubic = __webpack_require__(167);\n    var quadratic = __webpack_require__(170);\n    var arc = __webpack_require__(166);\n    var normalizeRadian = __webpack_require__(89).normalizeRadian;\n    var curve = __webpack_require__(45);\n\n    var windingLine = __webpack_require__(171);\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n/***/ }),\n/* 170 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(45);\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 171 */\n/***/ (function(module, exports) {\n\n\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n/***/ }),\n/* 172 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = __webpack_require__(52);\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n/***/ }),\n/* 173 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(31);\n    var curve = __webpack_require__(45);\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n/***/ }),\n/* 174 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var eventTool = __webpack_require__(52);\n    var zrUtil = __webpack_require__(27);\n    var Eventful = __webpack_require__(53);\n    var env = __webpack_require__(35);\n    var GestureMgr = __webpack_require__(172);\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n/***/ }),\n/* 175 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// CompoundPath to improve performance\n\n\n    var Path = __webpack_require__(32);\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n/***/ }),\n/* 176 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(27);\n\n    var Gradient = __webpack_require__(67);\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n/***/ }),\n/* 177 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(27);\n\n    var Gradient = __webpack_require__(67);\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n/***/ }),\n/* 178 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = __webpack_require__(66);\n    var zrUtil = __webpack_require__(27);\n    var textContain = __webpack_require__(44);\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n/***/ }),\n/* 179 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n/***/ }),\n/* 180 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = __webpack_require__(31);\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n/***/ }),\n/* 181 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = __webpack_require__(31);\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n/***/ }),\n/* 182 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = __webpack_require__(44);\n    var BoundingRect = __webpack_require__(38);\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n/***/ }),\n/* 183 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = __webpack_require__(32).extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n/***/ }),\n/* 184 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = __webpack_require__(45);\n    var vec2 = __webpack_require__(31);\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = __webpack_require__(32).extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n/***/ }),\n/* 185 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = __webpack_require__(32).extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 186 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = __webpack_require__(32).extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n/***/ }),\n/* 187 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = __webpack_require__(96);\n\n    module.exports = __webpack_require__(32).extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n/***/ }),\n/* 188 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = __webpack_require__(96);\n\n    module.exports = __webpack_require__(32).extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n/***/ }),\n/* 189 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = __webpack_require__(179);\n\n    module.exports = __webpack_require__(32).extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n/***/ }),\n/* 190 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = __webpack_require__(32).extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 191 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = __webpack_require__(35);\n    var Path = __webpack_require__(32);\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n/***/ }),\n/* 192 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = __webpack_require__(87);\n    var util = __webpack_require__(27);\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = __webpack_require__(92);\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n/***/ }),\n/* 193 */\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n/***/ }),\n/* 194 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Path = __webpack_require__(32);\n    var PathProxy = __webpack_require__(59);\n    var transformPath = __webpack_require__(195);\n    var matrix = __webpack_require__(41);\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        var transform;\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            path.setData(pathProxy.data);\n            transform && transformPath(path, transform);\n            // Svg and vml renderer don't have context\n            var ctx = path.getContext();\n            if (ctx) {\n                path.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            if (!transform) {\n                transform = matrix.create();\n            }\n            matrix.mul(transform, m, transform);\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n/***/ }),\n/* 195 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var CMD = __webpack_require__(59).CMD;\n    var vec2 = __webpack_require__(31);\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i++] += x;\n                    // cy\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n/***/ }),\n/* 196 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = __webpack_require__(91);\n    var env = __webpack_require__(35);\n    var zrUtil = __webpack_require__(27);\n\n    var Handler = __webpack_require__(159);\n    var Storage = __webpack_require__(162);\n    var Animation = __webpack_require__(163);\n    var HandlerProxy = __webpack_require__(174);\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: __webpack_require__(161)\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.4.3';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n/***/ }),\n/* 197 */,\n/* 198 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'grade-bar',\n  props: {\n    title: {\n      type: String,\n      default: 'title'\n    },\n    theme: {\n      type: String,\n      default: 'theme-black'\n    },\n    percent: {\n      type: [Number, String],\n      default: 0\n    }\n  },\n  methods: {}\n});\n\n/***/ }),\n/* 199 */,\n/* 200 */,\n/* 201 */,\n/* 202 */,\n/* 203 */,\n/* 204 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_Footer_vue__ = __webpack_require__(48);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_Footer_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_Footer_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_Header_vue__ = __webpack_require__(49);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_Header_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__components_Header_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_GradeBar_vue__ = __webpack_require__(223);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_GradeBar_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__components_GradeBar_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_ColorNumber_vue__ = __webpack_require__(156);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_ColorNumber_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__components_ColorNumber_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_Charts_vue__ = __webpack_require__(155);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_Charts_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__components_Charts_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__store_api__ = __webpack_require__(39);\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  data: function data() {\n    return {\n      data: {},\n      gradeData: {},\n      managerData: {},\n      teamData: {},\n      list: [],\n      stockData1: {}\n    };\n  },\n\n  watch: {\n    '$route': 'init'\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n\n  methods: {\n    init: function init() {\n      this.getData();\n      this.createChart();\n      this.getSiMuWangManagerBySID();\n      this.SiMuWangCompanyBySID();\n    },\n    _getCsi: function _getCsi(fn) {\n      var d = window.localStorage.getItem('_CSIDATA');\n      if (window.USE_CACHE && d) {\n        fn(window.JSON.parse(d));\n      } else {\n        __WEBPACK_IMPORTED_MODULE_5__store_api__[\"a\" /* default */].getCSI(+new Date('2014-01-01'), +new Date(), function (d2) {\n          window.localStorage.setItem('_CSIDATA', window.JSON.stringify(d2));\n          fn(d2);\n        });\n      }\n    },\n    getData: function getData() {\n      var _this = this;\n\n      __WEBPACK_IMPORTED_MODULE_5__store_api__[\"a\" /* default */].getSiMuWangProductInfoBySID(this.$route.params.id, function (d) {\n        if (d.code === 200 && d.results && d.results.length > 0) {\n          _this.data = d.results[0];\n        }\n      });\n\n      __WEBPACK_IMPORTED_MODULE_5__store_api__[\"a\" /* default */].getPrivateFundGrade(this.$route.params.id, function (d) {\n        if (d.code === 200 && d.results && d.results.length > 0) {\n          _this.gradeData = d.results[0];\n        }\n        _this.loading = false;\n      });\n    },\n    createChart: function createChart() {\n      var _this2 = this;\n\n      var date = [];\n      var data1 = [];\n      var data2 = [];\n      __WEBPACK_IMPORTED_MODULE_5__store_api__[\"a\" /* default */].getProductNets(this.$route.params.id, function (d) {\n        if (d.code === 200 && d.results && d.results.length > 0) {\n          _this2._getCsi(function (d2) {\n            for (var i = 0; i < d.results.length; i++) {\n              for (var j = 0; j < d2.results.length; j++) {\n                if (d.results[i].ds === d2.results[j].rts.substring(0, 10)) {\n                  date.unshift(d.results[i].ds);\n                  data1.unshift(d.results[i].cn);\n                  data2.unshift(d2.results[j].v);\n                }\n              }\n            }\n            var len = data1.length;\n            var temp1 = [];\n            var temp2 = [];\n            data1.forEach(function (item, index) {\n              temp1[index] = Math.round(item / data1[len - 1] * 100) / 100;\n            });\n            data2.forEach(function (item, index) {\n              temp2[index] = Math.round(item / data2[len - 1] * 100) / 100;\n            });\n            _this2.stockData1 = {\n              date: date,\n              data1: temp1,\n              data2: temp2,\n              legend1: '当前基金',\n              legend2: '沪深300'\n            };\n          });\n        }\n      });\n    },\n    getSiMuWangManagerBySID: function getSiMuWangManagerBySID() {\n      var _this3 = this;\n\n      __WEBPACK_IMPORTED_MODULE_5__store_api__[\"a\" /* default */].getSiMuWangManagerBySID(this.$route.params.id, function (d) {\n        if (d.code === 200 && d.results && d.results.length > 0) {\n          _this3.managerData = d.results[0];\n        }\n      });\n    },\n    SiMuWangCompanyBySID: function SiMuWangCompanyBySID() {\n      var _this4 = this;\n\n      __WEBPACK_IMPORTED_MODULE_5__store_api__[\"a\" /* default */].SiMuWangCompanyBySID(this.$route.params.id, function (d) {\n        if (d.code === 200 && d.results && d.results.length > 0) {\n          _this4.teamData = d.results[0];\n        }\n      });\n    }\n  },\n  components: {\n    GlobalFooter: __WEBPACK_IMPORTED_MODULE_0__components_Footer_vue___default.a,\n    GlobalHeader: __WEBPACK_IMPORTED_MODULE_1__components_Header_vue___default.a,\n    GradeBar: __WEBPACK_IMPORTED_MODULE_2__components_GradeBar_vue___default.a,\n    ColorNumber: __WEBPACK_IMPORTED_MODULE_3__components_ColorNumber_vue___default.a,\n    Charts: __WEBPACK_IMPORTED_MODULE_4__components_Charts_vue___default.a\n  }\n});\n\n/***/ }),\n/* 205 */,\n/* 206 */,\n/* 207 */,\n/* 208 */,\n/* 209 */,\n/* 210 */,\n/* 211 */,\n/* 212 */,\n/* 213 */,\n/* 214 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(15)();\n// imports\n\n\n// module\nexports.push([module.i, \".mu-grade-bar{overflow:hidden;display:-webkit-box;display:-ms-flexbox;display:flex;padding:0 2em}.mu-grade-bar .grade-bar-text{color:#666;text-align:right;width:30%;padding-right:10px}.mu-grade-bar .grade-bar-progress{height:10px;margin-top:6px;width:70%;background:#d4c7eb}.mu-grade-bar .grade-bar-progress>div{background:#7e57c2;height:10px;-webkit-transition:width 1s;transition:width 1s}.mu-grade-bar .grade-bar-progress.orange{background:#ffeee8}.mu-grade-bar .grade-bar-progress.orange>div{background:#ff7245}.mu-grade-bar .grade-bar-progress.green{background:#adf9eb}.mu-grade-bar .grade-bar-progress.green>div{background:#11e2bb}.mu-grade-bar .grade-bar-progress.yellow{background:#fff2b3}.mu-grade-bar .grade-bar-progress.yellow>div{background:#ffd200}.mu-grade-bar .grade-bar-progress.blue{background:#edf3ff}.mu-grade-bar .grade-bar-progress.blue>div{background:#6da4ff}\", \"\", {\"version\":3,\"sources\":[\"D:/WorkSpace/xcl-museui/src/components/GradeBar.vue\"],\"names\":[],\"mappings\":\"AACA,cACE,gBAAiB,AACjB,oBAAqB,AACrB,oBAAqB,AACrB,aAAc,AACd,aAAe,CAChB,AACD,8BACE,WAAY,AACZ,iBAAkB,AAClB,UAAW,AACX,kBAAoB,CACrB,AACD,kCACE,YAAa,AACb,eAAgB,AAChB,UAAW,AACX,kBAAoB,CACrB,AACD,sCACE,mBAAoB,AACpB,YAAa,AACb,4BAA6B,AAC7B,mBAAqB,CACtB,AACD,yCACE,kBAAoB,CACrB,AACD,6CACE,kBAAoB,CACrB,AACD,wCACE,kBAAoB,CACrB,AACD,4CACE,kBAAoB,CACrB,AACD,yCACE,kBAAoB,CACrB,AACD,6CACE,kBAAoB,CACrB,AACD,uCACE,kBAAoB,CACrB,AACD,2CACE,kBAAoB,CACrB\",\"file\":\"GradeBar.vue\",\"sourcesContent\":[\"\\n.mu-grade-bar {\\n  overflow: hidden;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  padding: 0 2em;\\n}\\n.mu-grade-bar .grade-bar-text {\\n  color: #666;\\n  text-align: right;\\n  width: 30%;\\n  padding-right: 10px;\\n}\\n.mu-grade-bar .grade-bar-progress {\\n  height: 10px;\\n  margin-top: 6px;\\n  width: 70%;\\n  background: #d4c7eb;\\n}\\n.mu-grade-bar .grade-bar-progress > div {\\n  background: #7E57C2;\\n  height: 10px;\\n  -webkit-transition: width 1s;\\n  transition: width 1s;\\n}\\n.mu-grade-bar .grade-bar-progress.orange {\\n  background: #ffeee8;\\n}\\n.mu-grade-bar .grade-bar-progress.orange > div {\\n  background: #ff7245;\\n}\\n.mu-grade-bar .grade-bar-progress.green {\\n  background: #adf9eb;\\n}\\n.mu-grade-bar .grade-bar-progress.green > div {\\n  background: #11E2BB;\\n}\\n.mu-grade-bar .grade-bar-progress.yellow {\\n  background: #fff2b3;\\n}\\n.mu-grade-bar .grade-bar-progress.yellow > div {\\n  background: #FFD200;\\n}\\n.mu-grade-bar .grade-bar-progress.blue {\\n  background: #edf3ff;\\n}\\n.mu-grade-bar .grade-bar-progress.blue > div {\\n  background: #6DA4FF;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 215 */,\n/* 216 */,\n/* 217 */,\n/* 218 */,\n/* 219 */,\n/* 220 */,\n/* 221 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(214);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(16)(\"11bac90c\", content, true);\n\n/***/ }),\n/* 222 */,\n/* 223 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(221)\n\nvar Component = __webpack_require__(6)(\n  /* script */\n  __webpack_require__(198),\n  /* template */\n  __webpack_require__(236),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 224 */,\n/* 225 */,\n/* 226 */,\n/* 227 */,\n/* 228 */,\n/* 229 */,\n/* 230 */,\n/* 231 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"container\"\n  }, [_c('global-header'), _vm._v(\" \"), _c('global-footer'), _vm._v(\" \"), _c('div', {\n    staticClass: \"infinite-container\"\n  }, [_c('mu-card', [_c('mu-card-title', {\n    attrs: {\n      \"title\": _vm.data.pn,\n      \"subTitle\": \"\"\n    }\n  }), _vm._v(\" \"), _c('mu-divider'), _vm._v(\" \"), _c('div', {\n    staticClass: \"pd20\"\n  }, [_c('mu-flexbox', [_c('mu-flexbox-item', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"最新净值：\")]), _vm._v(_vm._s(_vm.data.nn) + \"\\n          \")]), _vm._v(\" \"), _c('mu-flexbox-item', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"累计净值：\")]), _vm._v(_vm._s(_vm.data.tn) + \"\\n          \")])], 1), _vm._v(\" \"), _c('mu-flexbox', [_c('mu-flexbox-item', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"产品类型：\")]), _vm._v(_vm._s(_vm.data.ic1) + \"\\n          \")]), _vm._v(\" \"), _c('mu-flexbox-item', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"成立日期：\")]), _vm._v(_vm._s(_vm.data.fd) + \"\\n          \")])], 1), _vm._v(\" \"), _c('mu-flexbox', [_c('mu-flexbox-item', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"产品状态：\")]), _vm._v(_vm._s(_vm.data.rs) + \"\\n          \")]), _vm._v(\" \"), _c('mu-flexbox-item', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"资金规模：\")]), _vm._v(_vm._s(_vm.data.is) + \"\\n          \")])], 1)], 1), _vm._v(\" \"), _c('mu-divider'), _vm._v(\" \"), _c('div', {\n    staticClass: \"mt20\"\n  }), _vm._v(\" \"), _c('grade-bar', {\n    attrs: {\n      \"percent\": _vm.gradeData.tr * 20,\n      \"title\": \"新策略评级\"\n    }\n  }), _vm._v(\" \"), _c('grade-bar', {\n    attrs: {\n      \"percent\": _vm.gradeData.nrr * 20,\n      \"theme\": \"orange\",\n      \"title\": \"抗风险\"\n    }\n  }), _vm._v(\" \"), _c('grade-bar', {\n    attrs: {\n      \"percent\": _vm.gradeData.cr * 20,\n      \"theme\": \"yellow\",\n      \"title\": \"持续性\"\n    }\n  }), _vm._v(\" \"), _c('grade-bar', {\n    attrs: {\n      \"percent\": _vm.gradeData.sr * 20,\n      \"theme\": \"green\",\n      \"title\": \"选股能力\"\n    }\n  }), _vm._v(\" \"), _c('grade-bar', {\n    attrs: {\n      \"percent\": _vm.gradeData.mtr * 20,\n      \"theme\": \"blue\",\n      \"title\": \"择时能力\"\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('mu-divider'), _vm._v(\" \"), _c('mu-sub-header', [_vm._v(\"净值走势\")]), _vm._v(\" \"), _c('charts', {\n    attrs: {\n      \"data\": _vm.stockData1\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"mt20\"\n  }), _vm._v(\" \"), _c('mu-divider'), _vm._v(\" \"), _c('mu-sub-header', [_vm._v(\"风险评估\")]), _vm._v(\" \"), _c('div', {\n    staticStyle: {\n      \"clear\": \"both\"\n    }\n  }), _vm._v(\" \"), _c('mu-table', {\n    attrs: {\n      \"showCheckbox\": false\n    }\n  }, [_c('mu-tbody', [_c('mu-tr', [_c('mu-td', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"区间段\")]), _vm._v(\" \"), _c('mu-td', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"区间收益\")]), _vm._v(\" \"), _c('mu-td', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"年化收益\")])], 1), _vm._v(\" \"), _c('mu-tr', [_c('mu-td', {\n    staticClass: \"maxlen black-link\"\n  }, [_vm._v(\"一年\")]), _vm._v(\" \"), _c('mu-td', {\n    staticClass: \"maxlen\"\n  }, [_c('color-number', {\n    attrs: {\n      \"num\": _vm.gradeData.ir2\n    }\n  })], 1), _c('mu-td', {\n    staticClass: \"maxlen\"\n  }, [_c('color-number', {\n    attrs: {\n      \"num\": _vm.gradeData.yp\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('mu-tr', [_c('mu-td', {\n    staticClass: \"maxlen black-link\"\n  }, [_vm._v(\"两年\")]), _vm._v(\" \"), _c('mu-td', {\n    staticClass: \"maxlen\"\n  }, [_c('color-number', {\n    attrs: {\n      \"num\": _vm.gradeData.tyir2\n    }\n  })], 1), _vm._v(\" \"), _c('mu-td', {\n    staticClass: \"maxlen\"\n  }, [_c('color-number', {\n    attrs: {\n      \"num\": _vm.gradeData.tyyp\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('mu-tr', [_c('mu-td', {\n    staticClass: \"maxlen black-link\"\n  }, [_vm._v(\"今年以来\")]), _vm._v(\" \"), _c('mu-td', {\n    staticClass: \"maxlen\"\n  }, [_c('color-number', {\n    attrs: {\n      \"num\": _vm.gradeData.ftir\n    }\n  })], 1), _vm._v(\" \"), _c('mu-td', {\n    staticClass: \"maxlen\"\n  }, [_c('color-number', {\n    attrs: {\n      \"num\": _vm.gradeData.ftyp\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('mu-tr', [_c('mu-td', {\n    staticClass: \"maxlen black-link\"\n  }, [_vm._v(\"两年以来\")]), _vm._v(\" \"), _c('mu-td', {\n    staticClass: \"maxlen\"\n  }, [_c('color-number', {\n    attrs: {\n      \"num\": _vm.gradeData.ftir1\n    }\n  })], 1), _vm._v(\" \"), _c('mu-td', {\n    staticClass: \"maxlen\"\n  }, [_c('color-number', {\n    attrs: {\n      \"num\": _vm.gradeData.ftyp1\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('mu-tr', [_c('mu-td', {\n    staticClass: \"maxlen black-link\"\n  }, [_vm._v(\"成立以来\")]), _vm._v(\" \"), _c('mu-td', {\n    staticClass: \"maxlen\"\n  }, [_c('color-number', {\n    attrs: {\n      \"num\": _vm.gradeData.feir\n    }\n  })], 1), _vm._v(\" \"), _c('mu-td', {\n    staticClass: \"maxlen\"\n  }, [_c('color-number', {\n    attrs: {\n      \"num\": _vm.gradeData.feyp\n    }\n  })], 1)], 1)], 1)], 1), _vm._v(\" \"), _c('mu-divider'), _vm._v(\" \"), _c('mu-sub-header', [_vm._v(\"基金经理\")]), _vm._v(\" \"), (_vm.managerData.mn) ? _c('mu-table', {\n    attrs: {\n      \"showCheckbox\": false\n    }\n  }, [_c('mu-tbody', [_c('mu-tr', [_c('mu-td', {\n    attrs: {\n      \"colspan\": \"3\"\n    }\n  }, [_vm._v(_vm._s(_vm.managerData.mn) + \" \"), _c('small', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"(\" + _vm._s(_vm.managerData.p) + \")\")])])], 1), _vm._v(\" \"), _c('mu-tr', [_c('mu-td', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"文化程度 \")]), _vm._v(_vm._s(_vm.managerData.q))]), _vm._v(\" \"), _c('mu-td', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"从业年限 \")]), _vm._v(_vm._s(_vm.managerData.wy))]), _vm._v(\" \"), _c('mu-td', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"从业背景 \")]), _vm._v(_vm._s(_vm.managerData.wb))])], 1), _vm._v(\" \"), _c('mu-tr', [_c('mu-td', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"今年收益 \")]), _vm._v(_vm._s(_vm.managerData.yai))]), _vm._v(\" \"), _c('mu-td', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"累计收益 \")]), _vm._v(_vm._s(_vm.managerData.tai))]), _vm._v(\" \"), _c('mu-td', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"管理产品 \")]), _vm._v(_vm._s(_vm.managerData.fn))])], 1), _vm._v(\" \"), _c('mu-tr', [_c('mu-td', {\n    staticStyle: {\n      \"white-space\": \"normal\",\n      \"line-height\": \"2\",\n      \"padding\": \"20px\"\n    },\n    attrs: {\n      \"colspan\": \"3\"\n    }\n  }, [_vm._v(_vm._s(_vm.managerData.cd))])], 1)], 1)], 1) : _c('div', {\n    staticClass: \"no-data\"\n  }, [_vm._v(\"暂无数据\")]), _vm._v(\" \"), _c('mu-sub-header', [_vm._v(\"基金公司\")]), _vm._v(\" \"), (_vm.teamData.cn) ? _c('mu-table', {\n    attrs: {\n      \"showCheckbox\": false\n    }\n  }, [_c('mu-tbody', [_c('mu-tr', [_c('mu-td', {\n    attrs: {\n      \"colspan\": \"2\"\n    }\n  }, [_vm._v(_vm._s(_vm.teamData.cn))])], 1), _vm._v(\" \"), _c('mu-tr', [_c('mu-td', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"备案证号 \")]), _vm._v(_vm._s(_vm.teamData.fn))]), _vm._v(\" \"), _c('mu-td', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"核心人物 \")]), _vm._v(_vm._s(_vm.teamData.cp))])], 1), _vm._v(\" \"), _c('mu-tr', [_c('mu-td', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"产品总数 \")]), _vm._v(_vm._s(_vm.teamData.ca))]), _vm._v(\" \"), _c('mu-td', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"成立日期 \")]), _vm._v(_vm._s(_vm.teamData.ed))])], 1), _vm._v(\" \"), _c('mu-tr', [_c('mu-td', {\n    staticStyle: {\n      \"white-space\": \"normal\",\n      \"line-height\": \"2\",\n      \"padding\": \"20px\"\n    },\n    attrs: {\n      \"colspan\": \"2\"\n    }\n  }, [_vm._v(_vm._s(_vm.teamData.cd))])], 1)], 1)], 1) : _c('div', {\n    staticClass: \"no-data\"\n  }, [_vm._v(\"暂无数据\")])], 1)], 1)], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 232 */,\n/* 233 */,\n/* 234 */,\n/* 235 */,\n/* 236 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"mu-grade-bar\"\n  }, [_c('div', {\n    staticClass: \"grade-bar-text\"\n  }, [_vm._v(_vm._s(_vm.title))]), _vm._v(\" \"), _c('div', {\n    class: ['grade-bar-progress', _vm.theme]\n  }, [_c('div', {\n    style: ('width:' + _vm.percent + '%')\n  })])])\n},staticRenderFns: []}\n\n/***/ })\n]));\n\n\n// WEBPACK FOOTER //\n// static/js/1.d9fb88d2673f3e914c13.js","var Component = require(\"!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/selector?type=script&index=0!./GradeView.vue\"),\n  /* template */\n  require(\"!!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-598136e9\\\"}!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/selector?type=template&index=0!./GradeView.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/GradeView.vue\n// module id = 21\n// module chunks = 1","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/core/util.js\n// module id = 27\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var round = Math.round;\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n    var Transformable = require('zrender/lib/mixin/Transformable');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/util/graphic.js\n// module id = 28\n// module chunks = 0 1 2","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs, this.__lastOnlyGraphic);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.5.3',\n        dependencies: {\n            zrender: '3.4.3'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(require('./preprocessor/backwardCompat'));\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.Axis = require('./coord/Axis');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = require('./helper');\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/echarts.js\n// module id = 29\n// module chunks = 0 1 2","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/util/number.js\n// module id = 30\n// module chunks = 0 1 2","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/core/vector.js\n// module id = 31\n// module chunks = 0 1 2","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                // var rect = this.getBoundingRect();\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/Path.js\n// module id = 32\n// module chunks = 0 1 2","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/util/model.js\n// module id = 33\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/util/format.js\n// module id = 34\n// module chunks = 0 1 2","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/core/env.js\n// module id = 35\n// module chunks = 0 1 2","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/model/Model.js\n// module id = 36\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/util/clazz.js\n// module id = 37\n// module chunks = 0 1 2","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/core/BoundingRect.js\n// module id = 38\n// module chunks = 0 1 2","// const BASE_URL = 'http://172.17.18.132:8080/UserService'\r\nconst BASE_URL = 'https://www.58xcl.com/ns'\r\nconst SEARCH_URL = 'https://www.58xcl.com/qs/qs'\r\n\r\nvar jsonp = function (url, data, success) {\r\n  data = encodeURIComponent(window.JSON.stringify(data))\r\n  var jsonpCallback = 'jsonpCallback' + (new Date() * 1) + Math.floor(Math.random() * 10000)\r\n  var script = document.createElement('script')\r\n  var h = document.getElementsByTagName('head')[0]\r\n  if (url.indexOf('?') > -1) {\r\n    url += '&CallBack=' + jsonpCallback + '&data=' + data\r\n  } else {\r\n    url += '?CallBack=' + jsonpCallback + '&data=' + data\r\n  }\r\n  script.src = url\r\n  h.appendChild(script)\r\n  window[jsonpCallback] = window[jsonpCallback] || function (json) {\r\n    window[jsonpCallback] = undefined\r\n    try {\r\n      delete window[jsonpCallback]\r\n    } catch (e) {}\r\n    if (h) {\r\n      h.removeChild(script)\r\n    }\r\n    success(json)\r\n  }\r\n}\r\n\r\nvar request = {\r\n  func: 'function',\r\n  params: {}\r\n}\r\n\r\nconst API = {\r\n  getJournalismtList: function (type, page, countPerPage, fn) {\r\n    request.func = 'getJournalismtList'\r\n    request.params['t'] = type\r\n    request.params['p'] = page\r\n    request.params['cpp'] = countPerPage\r\n    jsonp(BASE_URL + '/consult?f=t', request, fn)\r\n  },\r\n  getJournalismtById: function (id, fn) {\r\n    request.func = 'getJournalismtById'\r\n    request.params['id'] = id\r\n    jsonp(BASE_URL + '/consult?f=t', request, fn)\r\n  },\r\n  getFundGrades: function (investmentStrategy, productType, establishTime, togetherRating, incomeRating, normalRiskRating, extremeRiskRating, type, isAsc, page, countPerPage, order, fn) {\r\n    request.func = 'getFundGrades'\r\n    request.params['is'] = investmentStrategy\r\n    request.params['pt'] = productType\r\n    request.params['et'] = establishTime\r\n    request.params['tr'] = togetherRating\r\n    request.params['ir'] = incomeRating\r\n    request.params['nrr'] = normalRiskRating\r\n    request.params['err'] = extremeRiskRating\r\n    request.params['t'] = type\r\n    request.params['ia'] = isAsc\r\n    request.params['p'] = page\r\n    request.params['cpp'] = countPerPage\r\n    request.params['o'] = order\r\n    jsonp(BASE_URL + '/datagrade?f=t', request, fn)\r\n  },\r\n  getFundIndexBaseByType: function (type, fn) {\r\n    request.func = 'getFundIndexBaseByType'\r\n    request.params['t'] = type\r\n    jsonp(BASE_URL + '/datagrade?f=t', request, fn)\r\n  },\r\n  SiMuWangCompanyByCompanySID: function (sid, fn) {\r\n    request.func = 'SiMuWangCompanyByCompanySID'\r\n    request.params['csid'] = sid\r\n    jsonp(BASE_URL + '/datagrade?f=t', request, fn)\r\n  },\r\n  getCompanyFundGrades: function (sid, fn) {\r\n    request.func = 'getCompanyFundGrades'\r\n    request.params['sid'] = sid\r\n    jsonp(BASE_URL + '/datagrade?f=t', request, fn)\r\n  },\r\n  fullTextSearch: function (kw, fn) {\r\n    jsonp(SEARCH_URL + '?func=fullTextSearch&kw=' + kw + '&t=0&p=1&c=8', request, fn)\r\n  },\r\n  getSiMuWangProductInfoBySID: function (sid, fn) {\r\n    request.func = 'getSiMuWangProductInfoBySID'\r\n    request.params['psid'] = sid\r\n    jsonp(BASE_URL + '/datacapture?f=t', request, fn)\r\n  },\r\n  getPrivateFundGrade: function (sid, fn) {\r\n    request.func = 'getPrivateFundGrade'\r\n    request.params['sid'] = sid\r\n    jsonp(BASE_URL + '/datagrade?f=t', request, fn)\r\n  },\r\n  getProductNets: function (sid, fn) {\r\n    request.func = 'getProductNets'\r\n    request.params['sid'] = sid\r\n    jsonp(BASE_URL + '/datagrade?f=t', request, fn)\r\n  },\r\n  getCSI: function (beginTime, endTime, fn) {\r\n    request.func = 'getCSI'\r\n    request.params['bt'] = beginTime\r\n    request.params['et'] = endTime\r\n    jsonp(BASE_URL + '/product?f=t', request, fn)\r\n  },\r\n  getFundIndexByType: function (type, fn) {\r\n    request.func = 'getFundIndexByType'\r\n    request.params['t'] = type\r\n    request.params['g'] = 0\r\n    jsonp(BASE_URL + '/datagrade?f=t', request, fn)\r\n  },\r\n  getSiMuWangManagerBySID: function (psid, fn) {\r\n    request.func = 'getSiMuWangManagerBySID'\r\n    request.params['psid'] = psid\r\n    jsonp(BASE_URL + '/datagrade?f=t', request, fn)\r\n  },\r\n  SiMuWangCompanyBySID: function (psid, fn) {\r\n    request.func = 'SiMuWangCompanyBySID'\r\n    request.params['psid'] = psid\r\n    jsonp(BASE_URL + '/datagrade?f=t', request, fn)\r\n  }\r\n}\r\nexport default API\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/api.js","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/model/Component.js\n// module id = 40\n// module chunks = 0 1 2","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/core/matrix.js\n// module id = 41\n// module chunks = 0 1 2","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/coord/axisHelper.js\n// module id = 42\n// module chunks = 0 1 2","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/util/layout.js\n// module id = 43\n// module chunks = 0 1 2","\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/contain/text.js\n// module id = 44\n// module chunks = 0 1 2","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/core/curve.js\n// module id = 45\n// module chunks = 0 1 2","<template>\r\n<div id=\"footer\">\r\n  <mu-paper>\r\n    <mu-bottom-nav :value=\"bottomNav\" @change=\"handleChange\">\r\n        <mu-bottom-nav-item value=\"/\" title=\"主页\" icon=\"home\"/>\r\n        <mu-bottom-nav-item value=\"/grade\" title=\"评级\" icon=\"equalizer\"/>\r\n        <mu-bottom-nav-item value=\"/exponent\" title=\"指数\" icon=\"trending_up\"/>\r\n        <mu-bottom-nav-item value=\"/news\" title=\"资讯\" icon=\"rss_feed\"/>\r\n    </mu-bottom-nav>\r\n  </mu-paper>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      bottomNav: this.$route.path,\r\n      bottomNavColor: 'home'\r\n    }\r\n  },\r\n  methods: {\r\n    handleChange (val) {\r\n      this.bottomNav = val\r\n      this.$router.push(val)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// Footer.vue?51930973","<template>\r\n<div id=\"header\">\r\n  <mu-appbar titleClass=\"center\">\r\n      <div slot=\"default\">{{title}}</div>\r\n      <mu-icon-button icon=\"arrow_back\" slot=\"left\" @click=\"back\" v-if=\"showBackBtn\" style=\"position:absolute;\"/>\r\n      <mu-icon-button icon=\"search\" slot=\"right\" @click=\"toggle\" style=\"position:absolute;right:10px;\"/>\r\n  </mu-appbar>\r\n  <mu-drawer :open=\"open\" :docked=\"false\" @close=\"toggle\">\r\n        <mu-auto-complete label=\"请输入基金关键词\" labelFloat :value=\"value\"  @input=\"handleInput\" :dataSource=\"dataSource\" @change=\"handlechange\"  filter=\"noFilter\"/>\r\n  </mu-drawer>\r\n</div>\r\n</template>\r\n<script>\r\nimport API from '../store/api'\r\nexport default {\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: '新策略'\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      dataSource: [],\r\n      links: [],\r\n      open: false,\r\n      value: '',\r\n      showBackBtn: ['Index', 'Grade', 'News', 'Exponent'].indexOf(this.$route.name) === -1\r\n    }\r\n  },\r\n  methods: {\r\n    handlechange (val) {\r\n      this.open = false\r\n      /* repair bug */\r\n      document.querySelector('.mu-overlay').style.display = 'none'\r\n      this.$router.push('/grade/' + this.links[this.dataSource.indexOf(val)])\r\n    },\r\n    toggle () {\r\n      this.open = !this.open\r\n    },\r\n    back () {\r\n      this.$router.back()\r\n    },\r\n    handleInput (val) {\r\n      this.dataSource = []\r\n      this.links = []\r\n      API.fullTextSearch(val, (d) => {\r\n        if (d.results && d.results.length) {\r\n          d.results.forEach((item, index) => {\r\n            this.dataSource.push(item.k)\r\n            this.links.push(item.lp)\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// Header.vue?0d7f447c","var Component = require(\"!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/selector?type=script&index=0!./Footer.vue\"),\n  /* template */\n  require(\"!!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e85301bc\\\"}!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/selector?type=template&index=0!./Footer.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Footer.vue\n// module id = 48\n// module chunks = 0 1 2 3 4 5 6 7 8 9","var Component = require(\"!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/selector?type=script&index=0!./Header.vue\"),\n  /* template */\n  require(\"!!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a5ee39d8\\\"}!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/selector?type=template&index=0!./Header.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Header.vue\n// module id = 49\n// module chunks = 0 1 2 3 4 5 6 7 8 9","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"header\"\n    }\n  }, [_c('mu-appbar', {\n    attrs: {\n      \"titleClass\": \"center\"\n    }\n  }, [_c('div', {\n    slot: \"default\"\n  }, [_vm._v(_vm._s(_vm.title))]), _vm._v(\" \"), (_vm.showBackBtn) ? _c('mu-icon-button', {\n    staticStyle: {\n      \"position\": \"absolute\"\n    },\n    attrs: {\n      \"icon\": \"arrow_back\"\n    },\n    on: {\n      \"click\": _vm.back\n    },\n    slot: \"left\"\n  }) : _vm._e(), _vm._v(\" \"), _c('mu-icon-button', {\n    staticStyle: {\n      \"position\": \"absolute\",\n      \"right\": \"10px\"\n    },\n    attrs: {\n      \"icon\": \"search\"\n    },\n    on: {\n      \"click\": _vm.toggle\n    },\n    slot: \"right\"\n  })], 1), _vm._v(\" \"), _c('mu-drawer', {\n    attrs: {\n      \"open\": _vm.open,\n      \"docked\": false\n    },\n    on: {\n      \"close\": _vm.toggle\n    }\n  }, [_c('mu-auto-complete', {\n    attrs: {\n      \"label\": \"请输入基金关键词\",\n      \"labelFloat\": \"\",\n      \"value\": _vm.value,\n      \"dataSource\": _vm.dataSource,\n      \"filter\": \"noFilter\"\n    },\n    on: {\n      \"input\": _vm.handleInput,\n      \"change\": _vm.handlechange\n    }\n  })], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/vue-loader/11.3.4/vue-loader/lib/template-compiler?{\"id\":\"data-v-a5ee39d8\"}!./~/.npminstall/vue-loader/11.3.4/vue-loader/lib/selector.js?type=template&index=0!./src/components/Header.vue\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"footer\"\n    }\n  }, [_c('mu-paper', [_c('mu-bottom-nav', {\n    attrs: {\n      \"value\": _vm.bottomNav\n    },\n    on: {\n      \"change\": _vm.handleChange\n    }\n  }, [_c('mu-bottom-nav-item', {\n    attrs: {\n      \"value\": \"/\",\n      \"title\": \"主页\",\n      \"icon\": \"home\"\n    }\n  }), _vm._v(\" \"), _c('mu-bottom-nav-item', {\n    attrs: {\n      \"value\": \"/grade\",\n      \"title\": \"评级\",\n      \"icon\": \"equalizer\"\n    }\n  }), _vm._v(\" \"), _c('mu-bottom-nav-item', {\n    attrs: {\n      \"value\": \"/exponent\",\n      \"title\": \"指数\",\n      \"icon\": \"trending_up\"\n    }\n  }), _vm._v(\" \"), _c('mu-bottom-nav-item', {\n    attrs: {\n      \"value\": \"/news\",\n      \"title\": \"资讯\",\n      \"icon\": \"rss_feed\"\n    }\n  })], 1)], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/vue-loader/11.3.4/vue-loader/lib/template-compiler?{\"id\":\"data-v-e85301bc\"}!./~/.npminstall/vue-loader/11.3.4/vue-loader/lib/selector.js?type=template&index=0!./src/components/Footer.vue\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/core/event.js\n// module id = 52\n// module chunks = 0 1 2","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/mixin/Eventful.js\n// module id = 53\n// module chunks = 0 1 2","/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = require('../core/LRU');\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/tool/color.js\n// module id = 54\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(\n                    labelOption.textStyle || (labelOption.textStyle = {}),\n                    crossStyle.textStyle\n                );\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 55\n// module chunks = 0 1 2","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/scale/Scale.js\n// module id = 56\n// module chunks = 0 1 2","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/config.js\n// module id = 57\n// module chunks = 0 1 2","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/container/Group.js\n// module id = 58\n// module chunks = 0 1 2","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/core/PathProxy.js\n// module id = 59\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/CoordinateSystem.js\n// module id = 60\n// module chunks = 0 1 2","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 61\n// module chunks = 0 1 2","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n    var helper = require('./helper');\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(extent, splitNumber);\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/scale/Interval.js\n// module id = 62\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/util/component.js\n// module id = 63\n// module chunks = 0 1 2","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/util/symbol.js\n// module id = 64\n// module chunks = 0 1 2","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/core/timsort.js\n// module id = 65\n// module chunks = 0 1 2","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/Displayable.js\n// module id = 66\n// module chunks = 0 1 2","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/Gradient.js\n// module id = 67\n// module chunks = 0 1 2","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var numberUtil = require('../../util/number');\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        // Get last value dim\n        var dimensions = data.dimensions.slice();\n        var valueDim;\n        var dataType;\n        while (dimensions.length && (\n            valueDim = dimensions.pop(),\n            dataType = data.getDimensionInfo(valueDim).type,\n            dataType === 'ordinal' || dataType === 'time'\n        )) {} // jshint ignore:line\n\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'normal'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n\n        if (valueDim != null && hoverLabelModel.getShallow('show')) {\n            graphic.setText(hoverItemStyle, hoverLabelModel, color);\n            hoverItemStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'emphasis'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            hoverItemStyle.text = '';\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/chart/helper/Symbol.js\n// module id = 68\n// module chunks = 0 1 2","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, {defaultNames: dimensions.concat(['value'])});\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, {defaultNames: ['x', 'y', 'z']});\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, {defaultNames: ['radius', 'angle', 'value']});\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, {defaultNames: ['lng', 'lat', 'value']})\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/chart/helper/createListFromArray.js\n// module id = 69\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 70\n// module chunks = 0 1 2","\n\n    var env = require('zrender/lib/core/env');\n    var zrUtil = require('zrender/lib/core/util');\n    var get = require('../../util/model').makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/axisPointer/globalListener.js\n// module id = 71\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var textContain = require('zrender/lib/contain/text');\n    var formatUtil = require('../../util/format');\n    var matrix = require('zrender/lib/core/matrix');\n    var axisHelper = require('../../coord/axisHelper');\n    var AxisBuilder = require('../axis/AxisBuilder');\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var textStyleModel = labelModel.getModel('textStyle');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = textStyleModel.getFont();\n        var textRect = textContain.getBoundingRect(\n            text, font, labelPos.textAlign, labelPos.textBaseline\n        );\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            style: {\n                text: text,\n                textFont: font,\n                textFill: textStyleModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            }\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 72\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var matrix = require('zrender/lib/core/matrix');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.textVerticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function'\n                            ? textColor(\n                                // (1) In category axis with data zoom, tick is not the original\n                                // index of axis.data. So tick should not be exposed to user\n                                // in category axis.\n                                // (2) Compatible with previous version, which always returns labelStr.\n                                // But in interval scale labelStr is like '223,445', which maked\n                                // user repalce ','. So we modify it to return original val but remain\n                                // it as 'string' to avoid error in replacing.\n                                axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                                index\n                            )\n                            : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.textVerticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/axis/AxisBuilder.js\n// module id = 73\n// module chunks = 0 1 2","\n\n    var axisPointerModelHelper = require('../axisPointer/modelHelper');\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/axis/AxisView.js\n// module id = 74\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 75\n// module chunks = 0 1 2","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/coord/Axis.js\n// module id = 76\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 77\n// module chunks = 0 1 2","'use strict';\n\n\n    var ComponentModel = require('../../model/Component');\n    var zrUtil = require('zrender/lib/core/util');\n    var axisModelCreator = require('../axisModelCreator');\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, require('../axisModelCommonMixin'));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 78\n// module chunks = 0 1 2","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/data/List.js\n// module id = 79\n// module chunks = 0 1 2","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Object} [opt]\n     * @param  {Array.<string>} [opt.defaultNames] Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param  {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, opt) {\n        if (!data) {\n            return dimensions;\n        }\n\n        opt = opt || {};\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = zrUtil.isArray(value0) && value0.length || 1;\n        }\n\n        var defaultNames = opt.defaultNames || [];\n        var extraPrefix = opt.extraPrefix || 'extra';\n        for (var i = 0; i < dimCount; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/data/helper/completeDimensions.js\n// module id = 80\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/model/Series.js\n// module id = 81\n// module chunks = 0 1 2","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/model/mixin/colorPalette.js\n// module id = 82\n// module chunks = 0 1 2","/**\n * For testable.\n */\n\n\n    var numberUtil = require('../util/number');\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = numberUtil.getPrecisionSafe(interval) + 2;\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/scale/helper.js\n// module id = 83\n// module chunks = 0 1 2","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/util/throttle.js\n// module id = 84\n// module chunks = 0 1 2","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/view/Chart.js\n// module id = 85\n// module chunks = 0 1 2","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/Element.js\n// module id = 86\n// module chunks = 0 1 2","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = (\n                isValueArray\n                && isArrayLike(firstVal[0])\n            )\n            ? 2 : 1;\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/animation/Animator.js\n// module id = 87\n// module chunks = 0 1 2","\n\n    module.exports = (typeof window !== 'undefined' &&\n                                    (window.requestAnimationFrame\n                                    || window.msRequestAnimationFrame\n                                    || window.mozRequestAnimationFrame\n                                    || window.webkitRequestAnimationFrame))\n                                || function (func) {\n                                    setTimeout(func, 16);\n                                };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/animation/requestAnimationFrame.js\n// module id = 88\n// module chunks = 0 1 2","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/contain/util.js\n// module id = 89\n// module chunks = 0 1 2","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/core/LRU.js\n// module id = 90\n// module chunks = 0 1 2","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/core/guid.js\n// module id = 91\n// module chunks = 0 1 2","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/core/log.js\n// module id = 92\n// module chunks = 0 1 2","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n\n    var LRU = require('../core/LRU');\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/Image.js\n// module id = 93\n// module chunks = 0 1 2","\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/Pattern.js\n// module id = 94\n// module chunks = 0 1 2","/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/Style.js\n// module id = 95\n// module chunks = 0 1 2","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/helper/poly.js\n// module id = 96\n// module chunks = 0 1 2","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/mixin/Transformable.js\n// module id = 97\n// module chunks = 0 1 2","<template>\r\n<div :id=\"randomId\" :style=\"'height:'+height+'px;'\"></div>\r\n</template>\r\n<script>\r\nimport echarts from 'echarts/lib/echarts'\r\nrequire('echarts/lib/chart/line')\r\nrequire('echarts/lib/component/tooltip')\r\nrequire('echarts/lib/component/legend')\r\nexport default {\r\n  name: 'charts',\r\n  props: {\r\n    height: {\r\n      type: [Number, String],\r\n      default: 200\r\n    },\r\n    data: {\r\n      type: Object\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      randomId: 'chart_' + (Date.now() + Math.ceil(Math.random() * 10000))\r\n    }\r\n  },\r\n  watch: {\r\n    data () {\r\n      this.drawChart()\r\n    }\r\n  },\r\n  methods: {\r\n    drawChart () {\r\n      var _this = this\r\n      var myChart = echarts.init(document.getElementById(this.randomId))\r\n      this.instance = myChart\r\n      var defaultOption = {\r\n        color: ['#8352F2', '#FF4081'],\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          formatter: '{b0}<br/>{a0} : {c0}<br/>{a1} : {c1}'\r\n        },\r\n        legend: {\r\n          data: [_this.data.legend1, _this.data.legend2]\r\n        },\r\n        grid: {\r\n          x: 40,\r\n          y: 30,\r\n          x2: 20,\r\n          y2: 20\r\n        },\r\n        xAxis: {\r\n          data: _this.data.date\r\n        },\r\n        yAxis: {},\r\n        series: [{\r\n          name: _this.data.legend1,\r\n          type: 'line',\r\n          data: _this.data.data1\r\n        }, {\r\n          name: _this.data.legend2,\r\n          type: 'line',\r\n          data: _this.data.data2\r\n        }]\r\n      }\r\n      myChart.showLoading()\r\n\r\n      if (this.data.data2 === undefined || this.data.data2.length === 0) {\r\n        defaultOption.tooltip.formatter = '{a} {b} : {c}'\r\n        defaultOption.legend.data.splice(1, 1)\r\n        defaultOption.series.splice(1, 1)\r\n      }\r\n      // 绘制图表\r\n      myChart.setOption(defaultOption)\r\n      myChart.hideLoading()\r\n    }\r\n  },\r\n  mounted () {\r\n    // this.drawChart()\r\n  }\r\n}\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// Charts.vue?657345b1","<template>\r\n  <span v-html=\"html\">\r\n  </span>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'color-number',\r\n  data () {\r\n    return {\r\n    }\r\n  },\r\n  props: {\r\n    num: {\r\n      type: [Number, String],\r\n      default: 0\r\n    },\r\n    percent: {\r\n      type: [Boolean],\r\n      default: true\r\n    },\r\n    color: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  computed: {\r\n    html () {\r\n      if (this.color) {\r\n        if (this.percent) {\r\n          return this.num >= 0 ? '<a>' + (this.num * 100).toFixed(2) + '%</a>' : '<a class=\"green\">' + (this.num * 100).toFixed(2) + '%</a>'\r\n        } else {\r\n          return this.num >= 0 ? '<a>' + (this.num).toFixed(4) + '</a>' : '<a class=\"green\">' + (this.num).toFixed(4) + '</a>'\r\n        }\r\n      } else {\r\n        if (this.percent) {\r\n          return (this.num * 100).toFixed(2) + '%'\r\n        } else {\r\n          return (this.num).toFixed(4)\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // methods: {\r\n  //   handleClick (event) {\r\n  //     this.$emit('click', event, this.percent)\r\n  //   }\r\n  // }\r\n}\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// ColorNumber.vue?3abb9ada","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/ExtensionAPI.js\n// module id = 100\n// module chunks = 0 1 2","/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = require('../../util/graphic');\n    var Symbol = require('./Symbol');\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/chart/helper/SymbolDraw.js\n// module id = 101\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n    var PRIORITY = echarts.PRIORITY;\n\n    require('./line/LineSeries');\n    require('./line/LineView');\n\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        require('../layout/points'), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        require('../processor/dataSample'), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    require('../component/gridSimple');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/chart/line.js\n// module id = 102\n// module chunks = 0 1 2","'use strict';\n\n\n    var createListFromArray = require('../helper/createListFromArray');\n    var SeriesModel = require('../../model/Series');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/chart/line/LineSeries.js\n// module id = 103\n// module chunks = 0 1 2","'use strict';\n// FIXME step not support polar\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var SymbolDraw = require('../helper/SymbolDraw');\n    var Symbol = require('../helper/Symbol');\n    var lineAnimationDiff = require('./lineAnimationDiff');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var polyHelper = require('./poly');\n    var ChartView = require('../../view/Chart');\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/chart/line/LineView.js\n// module id = 104\n// module chunks = 0 1 2","\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 105\n// module chunks = 0 1 2","// Poly path support NaN point\n\n\n    var Path = require('zrender/lib/graphic/Path');\n    var vec2 = require('zrender/lib/core/vector');\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/chart/line/poly.js\n// module id = 106\n// module chunks = 0 1 2","'use strict';\n// TODO boundaryGap\n\n\n    require('../coord/cartesian/AxisModel');\n\n    require('./axis/CartesianAxisView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/axis.js\n// module id = 107\n// module chunks = 0 1 2","\n\n    var echarts = require('../echarts');\n    var axisPointerModelHelper = require('./axisPointer/modelHelper');\n    var axisTrigger = require('./axisPointer/axisTrigger');\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('./axisPointer/AxisPointerModel');\n    require('./axisPointer/AxisPointerView');\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    require('./axisPointer/CartesianAxisPointer');\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, function (payload, ecModel, api) {\n        var outputFinder = axisTrigger(\n            ecModel.getComponent('axisPointer').coordSysAxesInfo,\n            payload.currTrigger,\n            [payload.x, payload.y],\n            payload,\n            payload.dispatchAction || zrUtil.bind(api.dispatchAction, api),\n            ecModel,\n            api,\n            payload.tooltipOption,\n            payload.highDownKey\n        );\n\n        return outputFinder;\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/axisPointer.js\n// module id = 108\n// module chunks = 0 1 2","\n\n    var echarts = require('../../echarts');\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                textStyle: {\n                    color: '#fff'\n                },\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 109\n// module chunks = 0 1 2","\n\n    var globalListener = require('./globalListener');\n\n    var AxisPonterView = require('../../echarts').extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 110\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../../util/clazz');\n    var graphic = require('../../util/graphic');\n    var get = require('../../util/model').makeGetter();\n    var axisPointerModelHelper = require('./modelHelper');\n    var eventTool = require('zrender/lib/core/event');\n    var throttle = require('../../util/throttle');\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = createIcon(handleModel, {\n                    onmousemove: function (e) {\n                        // Fot mobile devicem, prevent screen slider on the button.\n                        eventTool.stop(e.event);\n                    },\n                    onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                    drift: bind(this._onHandleDragMove, this),\n                    ondragend: bind(this._onHandleDragEnd, this)\n                });\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var payload = {\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                highDownKey: 'axisPointerHandle'\n            };\n            var axis = this._axisModel.axis;\n            payload[axis.dim + 'AxisId'] = this._axisModel.id;\n            this._api.dispatchAction(payload);\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals &= propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function createIcon(handleModel, handlers) {\n        var iconStr = handleModel.get('icon');\n        var style = {\n            x: -1, y: -1, width: 2, height: 2\n        };\n        var opt = zrUtil.extend({\n            style: {\n                strokeNoScale: true\n            },\n            rectHover: true,\n            cursor: 'move',\n            draggable: true\n        }, handlers);\n\n        return iconStr.indexOf('image://') === 0\n            ? (\n                style.image = iconStr.slice(8),\n                opt.style = style,\n                new graphic.Image(opt)\n            )\n            : graphic.makePath(\n                iconStr.replace('path://', ''),\n                opt,\n                style,\n                'center'\n            );\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 111\n// module chunks = 0 1 2","'use strict';\n\n\n    var graphic = require('../../util/graphic');\n    var BaseAxisPointer = require('./BaseAxisPointer');\n    var viewHelper = require('./viewHelper');\n    var cartesianAxisHelper = require('../axis/cartesianAxisHelper');\n    var AxisView = require('../axis/AxisView');\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 112\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var modelHelper = require('./modelHelper');\n    var findPointFromSeries = require('./findPointFromSeries');\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {string} [currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [point] x and y, which are mandatory, specify a point to\n     *              tigger axisPointer and tooltip.\n     * @param {Object} [finder] {xAxisId: ...[], yAxisName: ...[], angleAxisIndex: ...[]}\n     *              These properties, which are optional, restrict target axes.\n     * @param {Function} dispatchAction\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [tooltipOption]\n     * @param {string} [highDownKey]\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(\n        coordSysAxesInfo, currTrigger, point, finder, dispatchAction,\n        ecModel, api, tooltipOption, highDownKey\n    ) {\n        finder = finder || {};\n        if (!point || point[0] == null || point[1] == null) {\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var highlightBatch = [];\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys),\n            highlight: curry(highlight, highlightBatch)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            var coordSysContainsPoint = coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                if (!shouldHide && coordSysContainsPoint && !notTargetAxis(finder, axis)) {\n                    processOnAxis(axisInfo, axis.pointToData(point), updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo);\n        dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction);\n        dispatchHighDownActually(highlightBatch, dispatchAction, api, highDownKey);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.highlight('highlight', payloadBatch);\n        updaters.showPointer(axisInfo, newValue, payloadBatch);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function highlight(highlightBatch, actionType, batch) {\n        highlightBatch.push.apply(highlightBatch, batch);\n    }\n\n    function updateModelActually(showValueMap, axesInfo) {\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: tooltipOption,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(highlightBatch, dispatchAction, api, highDownKey) {\n        // Basic logic: If nothing highlighted, should downplay all highlighted items.\n        // This case will occur when mouse leave coordSys.\n\n        // FIXME\n        // (1) highlight status shoule be managemented in series.getData()?\n        // (2) If axisPointer A triggerOn 'handle' and axisPointer B triggerOn\n        // 'mousemove', items highlighted by A will be downplayed by B.\n        // It will not be fixed until someone requires this scenario.\n\n        // Consider items area hightlighted by 'handle', and globalListener may\n        // downplay all items (including just highlighted ones) when mousemove.\n        // So we use a highDownKey to separate them as a temporary solution.\n        var zr = api.getZr();\n        highDownKey = 'lastHighlights' + (highDownKey || '');\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Build hash map and remove duplicate incidentally.\n        zrUtil.each(highlightBatch, function (batchItem) {\n            var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n            newHighlights[key] = batchItem;\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function notTargetAxis(finder, axis) {\n        var isTarget = 1;\n        // If none of xxxAxisId and xxxAxisName and xxxAxisIndex exists in finder,\n        // no axis is not target axis.\n        each(finder, function (value, propName) {\n            isTarget &= !(/^.+(AxisId|AxisName|AxisIndex)$/.test(propName));\n        });\n        !isTarget && each(\n            [['AxisId', 'id'], ['AxisIndex', 'componentIndex'], ['AxisName', 'name']],\n            function (prop) {\n                var vals = modelUtil.normalizeToArray(finder[axis.dim + prop[0]]);\n                isTarget |= zrUtil.indexOf(vals, axis.model[prop[1]]) >= 0;\n            }\n        );\n        return !isTarget;\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 113\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var AxisBuilder = require('./AxisBuilder');\n    var AxisView = require('./AxisView');\n    var cartesianAxisHelper = require('./cartesianAxisHelper');\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/axis/CartesianAxisView.js\n// module id = 114\n// module chunks = 0 1 2","'use strict';\n\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('../coord/cartesian/Grid');\n\n    require('./axis');\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/gridSimple.js\n// module id = 115\n// module chunks = 0 1 2","\n    // List layout\n    var layout = require('../../util/layout');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/helper/listComponent.js\n// module id = 116\n// module chunks = 0 1 2","/**\n * Legend component entry file8\n */\n\n\n    require('./legend/LegendModel');\n    require('./legend/legendAction');\n    require('./legend/LegendView');\n\n    var echarts = require('../echarts');\n    // Series Filter\n    echarts.registerProcessor(require('./legend/legendFilter'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/legend.js\n// module id = 117\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n\n    var LegendModel = require('../../echarts').extendComponentModel({\n\n        type: 'legend',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 'top',\n            // bottom: 'top',\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/legend/LegendModel.js\n// module id = 118\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolCreator = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var listComponentHelper = require('../helper/listComponent');\n\n    var curry = zrUtil.curry;\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'legend',\n\n        init: function () {\n            this._symbolTypeStore = {};\n        },\n\n        render: function (legendModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!legendModel.get('show')) {\n                return;\n            }\n\n            var selectMode = legendModel.get('selectedMode');\n            var itemAlign = legendModel.get('align');\n\n            if (itemAlign === 'auto') {\n                itemAlign = (legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical')\n                    ? 'right' : 'left';\n            }\n\n            var legendDrawedMap = {};\n\n            zrUtil.each(legendModel.getData(), function (itemModel) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (name === '' || name === '\\n') {\n                    group.add(new graphic.Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawedMap[name]) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawedMap[name] = true;\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawedMap[name]) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawedMap[name] = true;\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawedMap[name]) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n\n            listComponentHelper.layout(group, legendModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, legendModel);\n        },\n\n        _createItem: function (\n            name, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new graphic.Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            // Text\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            var text = new graphic.Text({\n                style: {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textFont: textStyleModel.getFont(),\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                }\n            });\n            itemGroup.add(text);\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n\n\n            this.group.add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            return itemGroup;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/legend/LegendView.js\n// module id = 119\n// module chunks = 0 1 2","/**\n * @file Legend action\n */\n\n\n    var echarts = require('../../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (name in selectedMap) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/legend/legendAction.js\n// module id = 120\n// module chunks = 0 1 2","\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/legend/legendFilter.js\n// module id = 121\n// module chunks = 0 1 2","// FIXME Better way to pack data in graphic element\n\n\n    require('./axisPointer');\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/tooltip.js\n// module id = 122\n// module chunks = 0 1 2","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRoot;\n            if (zr && zr.painter && (viewportRoot = zr.painter.getViewportRoot())) {\n                x += viewportRoot.offsetLeft || 0;\n                y += viewportRoot.offsetTop || 0;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 123\n// module chunks = 0 1 2","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 124\n// module chunks = 0 1 2","\n\n    var TooltipContent = require('./TooltipContent');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var graphic = require('../../util/graphic');\n    var findPointFromSeries = require('../axisPointer/findPointFromSeries');\n    var layoutUtil = require('../../util/layout');\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n    var globalListener = require('../axisPointer/globalListener');\n    var axisHelper = require('../../coord/axisHelper');\n    var axisPointerViewHelper = require('../axisPointer/viewHelper');\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/component/tooltip/TooltipView.js\n// module id = 125\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n    var logAxis = zrUtil.defaults({\n        logBase: 10\n    }, valueAxis);\n    logAxis.scale = true;\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/coord/axisDefault.js\n// module id = 126\n// module chunks = 0 1 2","\n\n    var axisDefault = require('./axisDefault');\n    var zrUtil = require('zrender/lib/core/util');\n    var ComponentModel = require('../model/Component');\n    var layout = require('../util/layout');\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/coord/axisModelCreator.js\n// module id = 127\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n    var axisLabelInterval = require('./axisLabelInterval');\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                labelInterval = this._labelInterval = axisLabelInterval(this);\n            }\n            return labelInterval;\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 128\n// module chunks = 0 1 2","'use strict';\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 129\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian = require('./Cartesian');\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 130\n// module chunks = 0 1 2","/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = require('../../util/layout');\n    var axisHelper = require('../../coord/axisHelper');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian2D = require('./Cartesian2D');\n    var Axis2D = require('./Axis2D');\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    require('./GridModel');\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            grid.resize(gridModel, api);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    require('../../CoordinateSystem').register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/coord/cartesian/Grid.js\n// module id = 131\n// module chunks = 0 1 2","'use strict';\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    require('./AxisModel');\n\n    var ComponentModel = require('../../model/Component');\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/coord/cartesian/GridModel.js\n// module id = 132\n// module chunks = 0 1 2","'use strict';\n/**\n * Helper function for axisLabelInterval calculation\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('../axisHelper');\n\n    module.exports = function (axis) {\n        var axisModel = axis.model;\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelInterval = labelModel.get('interval');\n        if (!(axis.type === 'category' && labelInterval === 'auto')) {\n            return labelInterval === 'auto' ? 0 : labelInterval;\n        }\n\n        return axisHelper.getAxisLabelInterval(\n            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\n            axisModel.getFormattedLabels(),\n            labelModel.getModel('textStyle').getFont(),\n            axis.isHorizontal()\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/coord/cartesian/axisLabelInterval.js\n// module id = 133\n// module chunks = 0 1 2","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/data/DataDiffer.js\n// module id = 134\n// module chunks = 0 1 2","\n\n    var createListFromArray = require('./chart/helper/createListFromArray');\n    var symbolUtil = require('./util/symbol');\n    var axisHelper = require('./coord/axisHelper');\n    var axisModelCommonMixin = require('./coord/axisModelCommonMixin');\n    var Model = require('./model/Model');\n    var util = require('zrender/lib/core/util');\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * Complete the dimensions array guessed from the data structure.\n         * @param  {Array.<string>} dimensions Necessary dimensions, like ['x', 'y']\n         * @param  {Array} data Data list. [[1, 2, 3], [2, 3, 4]]\n         * @param  {Object} [opt]\n         * @param  {Array.<string>} [opt.defaultNames] Default names to fill not necessary dimensions, like ['value']\n         * @param  {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n         * @param  {number} [opt.dimCount] If not specified, guess by the first data item.\n         * @return {Array.<string>}\n         */\n        completeDimensions: require('./data/helper/completeDimensions'),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/helper.js\n// module id = 135\n// module chunks = 0 1 2","\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys) {\n                var dims = coordSys.dimensions;\n\n                if (dims.length === 1) {\n                    data.each(dims[0], function (x, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                    });\n                }\n                else if (dims.length === 2) {\n                    data.each(dims, function (x, y, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(\n                            idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                        );\n                    }, true);\n                }\n            }\n        });\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/layout/points.js\n// module id = 136\n// module chunks = 0 1 2","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/loading/default.js\n// module id = 137\n// module chunks = 0 1 2","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs, onlyGraphic) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null, onlyGraphic);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type, onlyGraphic) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    // If only graphic, other series and component will not\n                    // go through update process, data should not be restored.\n                    // Otherwise grphic els mounted on data will be eliminated\n                    // and downplay will not work.\n                    !onlyGraphic && this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {series: []};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/model/Global.js\n// module id = 138\n// module chunks = 0 1 2","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/model/OptionManager.js\n// module id = 139\n// module chunks = 0 1 2","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/model/globalDefault.js\n// module id = 140\n// module chunks = 0 1 2","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/model/mixin/areaStyle.js\n// module id = 141\n// module chunks = 0 1 2","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/model/mixin/boxLayout.js\n// module id = 142\n// module chunks = 0 1 2","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/model/mixin/itemStyle.js\n// module id = 143\n// module chunks = 0 1 2","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/model/mixin/lineStyle.js\n// module id = 144\n// module chunks = 0 1 2","\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/model/mixin/textStyle.js\n// module id = 145\n// module chunks = 0 1 2","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/preprocessor/backwardCompat.js\n// module id = 146\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 147\n// module chunks = 0 1 2","\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/processor/dataSample.js\n// module id = 148\n// module chunks = 0 1 2","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/scale/Log.js\n// module id = 149\n// module chunks = 0 1 2","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/scale/Ordinal.js\n// module id = 150\n// module chunks = 0 1 2","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var scaleHelper = require('./helper');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/scale/Time.js\n// module id = 151\n// module chunks = 0 1 2","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/view/Component.js\n// module id = 152\n// module chunks = 0 1 2","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/visual/seriesColor.js\n// module id = 153\n// module chunks = 0 1 2","\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/echarts/3.5.3/echarts/lib/visual/symbol.js\n// module id = 154\n// module chunks = 0 1 2","var Component = require(\"!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/selector?type=script&index=0!./Charts.vue\"),\n  /* template */\n  require(\"!!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-bab5fe48\\\"}!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/selector?type=template&index=0!./Charts.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Charts.vue\n// module id = 155\n// module chunks = 0 1 2","var Component = require(\"!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/selector?type=script&index=0!./ColorNumber.vue\"),\n  /* template */\n  require(\"!!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-22723e15\\\"}!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/selector?type=template&index=0!./ColorNumber.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ColorNumber.vue\n// module id = 156\n// module chunks = 0 1 4","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('span', {\n    domProps: {\n      \"innerHTML\": _vm._s(_vm.html)\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/vue-loader/11.3.4/vue-loader/lib/template-compiler?{\"id\":\"data-v-22723e15\"}!./~/.npminstall/vue-loader/11.3.4/vue-loader/lib/selector.js?type=template&index=0!./src/components/ColorNumber.vue\n// module id = 157\n// module chunks = 0 1 4","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    style: ('height:' + _vm.height + 'px;'),\n    attrs: {\n      \"id\": _vm.randomId\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/vue-loader/11.3.4/vue-loader/lib/template-compiler?{\"id\":\"data-v-bab5fe48\"}!./~/.npminstall/vue-loader/11.3.4/vue-loader/lib/selector.js?type=template&index=0!./src/components/Charts.vue\n// module id = 158\n// module chunks = 0 1 2","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/Handler.js\n// module id = 159\n// module chunks = 0 1 2","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/Layer.js\n// module id = 160\n// module chunks = 0 1 2","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/Painter.js\n// module id = 161\n// module chunks = 0 1 2","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/Storage.js\n// module id = 162\n// module chunks = 0 1 2","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/animation/Animation.js\n// module id = 163\n// module chunks = 0 1 2","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/animation/Clip.js\n// module id = 164\n// module chunks = 0 1 2","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/animation/easing.js\n// module id = 165\n// module chunks = 0 1 2","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/contain/arc.js\n// module id = 166\n// module chunks = 0 1 2","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/contain/cubic.js\n// module id = 167\n// module chunks = 0 1 2","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/contain/line.js\n// module id = 168\n// module chunks = 0 1 2","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/contain/path.js\n// module id = 169\n// module chunks = 0 1 2","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/contain/quadratic.js\n// module id = 170\n// module chunks = 0 1 2","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/contain/windingLine.js\n// module id = 171\n// module chunks = 0 1 2","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/core/GestureMgr.js\n// module id = 172\n// module chunks = 0 1 2","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/core/bbox.js\n// module id = 173\n// module chunks = 0 1 2","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/dom/HandlerProxy.js\n// module id = 174\n// module chunks = 0 1 2","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/CompoundPath.js\n// module id = 175\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/LinearGradient.js\n// module id = 176\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/RadialGradient.js\n// module id = 177\n// module chunks = 0 1 2","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/Text.js\n// module id = 178\n// module chunks = 0 1 2","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/helper/roundRect.js\n// module id = 179\n// module chunks = 0 1 2","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 180\n// module chunks = 0 1 2","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 181\n// module chunks = 0 1 2","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = require('../../contain/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/mixin/RectText.js\n// module id = 182\n// module chunks = 0 1 2","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/shape/Arc.js\n// module id = 183\n// module chunks = 0 1 2","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 184\n// module chunks = 0 1 2","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/shape/Circle.js\n// module id = 185\n// module chunks = 0 1 2","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/shape/Line.js\n// module id = 186\n// module chunks = 0 1 2","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/shape/Polygon.js\n// module id = 187\n// module chunks = 0 1 2","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/shape/Polyline.js\n// module id = 188\n// module chunks = 0 1 2","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/shape/Rect.js\n// module id = 189\n// module chunks = 0 1 2","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/shape/Ring.js\n// module id = 190\n// module chunks = 0 1 2","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = require('../../core/env');\n    var Path = require('../Path');\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/graphic/shape/Sector.js\n// module id = 191\n// module chunks = 0 1 2","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/mixin/Animatable.js\n// module id = 192\n// module chunks = 0 1 2","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/mixin/Draggable.js\n// module id = 193\n// module chunks = 0 1 2","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n    var matrix = require('../core/matrix');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        var transform;\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            path.setData(pathProxy.data);\n            transform && transformPath(path, transform);\n            // Svg and vml renderer don't have context\n            var ctx = path.getContext();\n            if (ctx) {\n                path.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            if (!transform) {\n                transform = matrix.create();\n            }\n            matrix.mul(transform, m, transform);\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/tool/path.js\n// module id = 194\n// module chunks = 0 1 2","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i++] += x;\n                    // cy\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/tool/transformPath.js\n// module id = 195\n// module chunks = 0 1 2","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.4.3';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/zrender/3.4.3/zrender/lib/zrender.js\n// module id = 196\n// module chunks = 0 1 2","<template>\r\n<div class=\"mu-grade-bar\">\r\n  <div class=\"grade-bar-text\">{{title}}</div>\r\n  <div :class=\"['grade-bar-progress',theme]\">\r\n      <div :style=\"'width:' + percent + '%'\"></div>\r\n  </div>\r\n</div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'grade-bar',\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: 'title'\r\n    },\r\n    theme: {\r\n      type: String,\r\n      default: 'theme-black'\r\n    },\r\n    percent: {\r\n      type: [Number, String],\r\n      default: 0\r\n    }\r\n  },\r\n  methods: {\r\n\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\">\r\n@orage: #ff7245;\r\n@blue: #6DA4FF;\r\n@green:#11E2BB;\r\n@yellow:#FFD200;\r\n@default:#7E57C2;\r\n.mu-grade-bar{\r\n  overflow: hidden;\r\n  display: flex;\r\n  padding: 0 2em;\r\n  .grade-bar-text{\r\n    color: #666;\r\n    text-align: right;\r\n    width:30%;\r\n    padding-right:10px;\r\n  }\r\n  .grade-bar-progress{\r\n    height: 10px;\r\n    margin-top:6px;\r\n    width:70%;\r\n    background: lighten(@default, 30%);\r\n    >div{\r\n      background: @default;\r\n      height: 10px;\r\n      -webkit-transition: width 1s;\r\n      transition: width 1s;\r\n    }\r\n    &.orange {\r\n      background: lighten(@orage,32%);\r\n      >div{\r\n        background: @orage\r\n      }\r\n    }\r\n    &.green {\r\n      background: lighten(@green,35%);\r\n      >div{\r\n        background: @green\r\n      }\r\n    }\r\n    &.yellow {\r\n      background: lighten(@yellow,35%);\r\n      >div{\r\n        background: @yellow\r\n      }\r\n    }\r\n    &.blue {\r\n      background: lighten(@blue,25%);\r\n      >div{\r\n        background: @blue\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// GradeBar.vue?568421e6","<template>\n<div class=\"container\">\n  <global-header></global-header>\n  <global-footer></global-footer>\n  <div class=\"infinite-container\">\n    <mu-card>\n      <mu-card-title :title=\"data.pn\"\n                     subTitle=\"\" />\n      <!--<mu-icon-button  icon=\"favorite\" style=\"position:absolute;right:10px;top:12px;\" />-->\n      <mu-divider/>\n      <div class=\"pd20\">\n        <mu-flexbox>\n          <mu-flexbox-item>\n            <span class=\"t3\">最新净值：</span>{{data.nn}}\n          </mu-flexbox-item>\n          <mu-flexbox-item>\n            <span class=\"t3\">累计净值：</span>{{data.tn}}\n          </mu-flexbox-item>\n        </mu-flexbox>\n        <mu-flexbox>\n          <mu-flexbox-item>\n            <span class=\"t3\">产品类型：</span>{{data.ic1}}\n          </mu-flexbox-item>\n          <mu-flexbox-item>\n            <span class=\"t3\">成立日期：</span>{{data.fd}}\n          </mu-flexbox-item>\n        </mu-flexbox>\n        <mu-flexbox>\n          <mu-flexbox-item>\n            <span class=\"t3\">产品状态：</span>{{data.rs}}\n          </mu-flexbox-item>\n          <mu-flexbox-item>\n            <span class=\"t3\">资金规模：</span>{{data.is}}\n          </mu-flexbox-item>\n        </mu-flexbox>\n        </div>\n        <mu-divider/>\n        <div class=\"mt20\"></div>\n        <grade-bar :percent=\"gradeData.tr*20\"\n                   title=\"新策略评级\"></grade-bar>\n        <grade-bar :percent=\"gradeData.nrr*20\"\n                   theme=\"orange\"\n                   title=\"抗风险\"></grade-bar>\n        <grade-bar :percent=\"gradeData.cr*20\"\n                   theme=\"yellow\"\n                   title=\"持续性\"></grade-bar>\n        <grade-bar :percent=\"gradeData.sr*20\"\n                   theme=\"green\"\n                   title=\"选股能力\"></grade-bar>\n        <grade-bar :percent=\"gradeData.mtr*20\"\n                   theme=\"blue\"\n                   title=\"择时能力\"></grade-bar>\n        <br />\n        <mu-divider/>\n        <mu-sub-header>净值走势</mu-sub-header>\n        <charts :data=\"stockData1\" ></charts>\n             <div class=\"mt20\"></div>\n        <mu-divider/>\n       <mu-sub-header>风险评估</mu-sub-header>\n       <div style=\"clear:both\"></div>\n        <mu-table :showCheckbox=\"false\">\n          <mu-tbody>\n            <mu-tr>\n              <mu-td class=\"t3\">区间段</mu-td>\n              <mu-td class=\"t3\">区间收益</mu-td>\n              <mu-td class=\"t3\">年化收益</mu-td>\n            </mu-tr>\n            <mu-tr>\n              <mu-td class=\"maxlen black-link\">一年</mu-td>\n              <mu-td class=\"maxlen\">\n                <color-number :num=\"gradeData.ir2\"></color-number>\n              </mu-td><mu-td class=\"maxlen\">\n                <color-number :num=\"gradeData.yp\"></color-number>\n              </mu-td>\n            </mu-tr>\n            <mu-tr>\n              <mu-td class=\"maxlen black-link\">两年</mu-td>\n              <mu-td class=\"maxlen\">\n                <color-number :num=\"gradeData.tyir2\"></color-number>\n              </mu-td>\n              <mu-td class=\"maxlen\">\n                <color-number :num=\"gradeData.tyyp\"></color-number>\n              </mu-td>\n            </mu-tr>\n            <mu-tr>\n              <mu-td class=\"maxlen black-link\">今年以来</mu-td>\n              <mu-td class=\"maxlen\">\n                <color-number :num=\"gradeData.ftir\"></color-number>\n              </mu-td>\n              <mu-td class=\"maxlen\">\n                <color-number :num=\"gradeData.ftyp\"></color-number>\n              </mu-td>\n            </mu-tr>\n            <mu-tr>\n              <mu-td class=\"maxlen black-link\">两年以来</mu-td>\n              <mu-td class=\"maxlen\">\n                <color-number :num=\"gradeData.ftir1\"></color-number>\n              </mu-td>\n              <mu-td class=\"maxlen\">\n                <color-number :num=\"gradeData.ftyp1\"></color-number>\n              </mu-td>\n            </mu-tr>\n            <mu-tr>\n              <mu-td class=\"maxlen black-link\">成立以来</mu-td>\n              <mu-td class=\"maxlen\">\n                <color-number :num=\"gradeData.feir\"></color-number>\n              </mu-td>\n              <mu-td class=\"maxlen\">\n                <color-number :num=\"gradeData.feyp\"></color-number>\n              </mu-td>\n            </mu-tr>\n          </mu-tbody>\n        </mu-table>\n\n        <mu-divider/>\n       <mu-sub-header>基金经理</mu-sub-header>\n       <mu-table :showCheckbox=\"false\" v-if=\"managerData.mn\">\n        <mu-tbody>\n          <mu-tr>\n            <mu-td colspan=\"3\">{{managerData.mn}} <small class=\"t3\">({{managerData.p}})</small></mu-td>\n          </mu-tr>\n          <mu-tr>\n            <mu-td><span class=\"t3\">文化程度 </span>{{managerData.q}}</mu-td>\n            <mu-td><span class=\"t3\">从业年限 </span>{{managerData.wy}}</mu-td>\n            <mu-td><span class=\"t3\">从业背景 </span>{{managerData.wb}}</mu-td>\n          </mu-tr>\n          <mu-tr>\n            <mu-td><span class=\"t3\">今年收益 </span>{{managerData.yai}}</mu-td>\n            <mu-td><span class=\"t3\">累计收益 </span>{{managerData.tai}}</mu-td>\n            <mu-td><span class=\"t3\">管理产品 </span>{{managerData.fn}}</mu-td>\n          </mu-tr>\n          <mu-tr>\n          <mu-td colspan=\"3\" style=\"white-space:normal;line-height:2;padding:20px;\">{{managerData.cd}}</mu-td>\n          </mu-tr>\n        </mu-tbody>\n       </mu-table>\n       <div class=\"no-data\" v-else>暂无数据</div>\n\n       <mu-sub-header>基金公司</mu-sub-header>\n       <mu-table :showCheckbox=\"false\" v-if=\"teamData.cn\">\n        <mu-tbody>\n          <mu-tr>\n            <mu-td colspan=\"2\">{{teamData.cn}}</mu-td>\n          </mu-tr>\n          <mu-tr>\n            <mu-td><span class=\"t3\">备案证号 </span>{{teamData.fn}}</mu-td>\n            <mu-td><span class=\"t3\">核心人物 </span>{{teamData.cp}}</mu-td>\n          </mu-tr>\n          <mu-tr>\n             <mu-td><span class=\"t3\">产品总数 </span>{{teamData.ca}}</mu-td>\n            <mu-td><span class=\"t3\">成立日期 </span>{{teamData.ed}}</mu-td>\n          </mu-tr>\n          <mu-tr>\n          <mu-td colspan=\"2\" style=\"white-space:normal;line-height:2;padding:20px;\">{{teamData.cd}}</mu-td>\n          </mu-tr>\n        </mu-tbody>\n       </mu-table>\n       <div class=\"no-data\" v-else>暂无数据</div>\n    </mu-card>\n  </div>\n  </div>\n</template>\n<script>\nimport GlobalFooter from '../components/Footer.vue'\nimport GlobalHeader from '../components/Header.vue'\nimport GradeBar from '../components/GradeBar.vue'\nimport ColorNumber from '../components/ColorNumber.vue'\nimport Charts from '../components/Charts.vue'\nimport API from '../store/api'\nexport default {\n  data () {\n    return {\n      data: {},\n      gradeData: {},\n      managerData: {},\n      teamData: {},\n      list: [],\n      stockData1: {}\n    }\n  },\n  watch: {\n    '$route': 'init'\n  },\n  mounted () {\n    this.init()\n  },\n  methods: {\n    init () {\n      this.getData()\n      this.createChart()\n      this.getSiMuWangManagerBySID()\n      this.SiMuWangCompanyBySID()\n    },\n    _getCsi (fn) {\n      var d = window.localStorage.getItem('_CSIDATA')\n      if (window.USE_CACHE && d) {\n        fn(window.JSON.parse(d))\n      } else {\n        API.getCSI(+new Date('2014-01-01'), +new Date(), function (d2) {\n          window.localStorage.setItem('_CSIDATA', window.JSON.stringify(d2))\n          fn(d2)\n        })\n      }\n    },\n    getData () {\n      API.getSiMuWangProductInfoBySID(this.$route.params.id, d => {\n        if (d.code === 200 && d.results && d.results.length > 0) {\n          this.data = d.results[0]\n        }\n      })\n\n      API.getPrivateFundGrade(this.$route.params.id, d => {\n        if (d.code === 200 && d.results && d.results.length > 0) {\n          this.gradeData = d.results[0]\n        }\n        this.loading = false\n      })\n    },\n    createChart () {\n      var date = []\n      var data1 = []\n      var data2 = []\n      API.getProductNets(this.$route.params.id, d => {\n        if (d.code === 200 && d.results && d.results.length > 0) {\n          // 限制时间段防止加载时间过长\n          this._getCsi(d2 => {\n            for (var i = 0; i < d.results.length; i++) {\n              for (var j = 0; j < d2.results.length; j++) {\n                if (d.results[i].ds === d2.results[j].rts.substring(0, 10)) {\n                  date.unshift(d.results[i].ds)\n                  data1.unshift(d.results[i].cn)\n                  data2.unshift(d2.results[j].v)\n                }\n              }\n            }\n            var len = data1.length\n            var temp1 = []\n            var temp2 = []\n            data1.forEach(function (item, index) {\n              temp1[index] = Math.round((item / data1[len - 1]) * 100) / 100\n            })\n            data2.forEach(function (item, index) {\n              temp2[index] = Math.round((item / data2[len - 1]) * 100) / 100\n            })\n            this.stockData1 = {\n              date: date,\n              data1: temp1,\n              data2: temp2,\n              legend1: '当前基金',\n              legend2: '沪深300'\n            }\n          })\n        }\n      })\n    },\n    getSiMuWangManagerBySID () {\n      API.getSiMuWangManagerBySID(this.$route.params.id, d => {\n        if (d.code === 200 && d.results && d.results.length > 0) {\n          this.managerData = d.results[0]\n        }\n      })\n    },\n    SiMuWangCompanyBySID () {\n      API.SiMuWangCompanyBySID(this.$route.params.id, d => {\n        if (d.code === 200 && d.results && d.results.length > 0) {\n          this.teamData = d.results[0]\n        }\n      })\n    }\n  },\n  components: {\n    GlobalFooter,\n    GlobalHeader,\n    GradeBar,\n    ColorNumber,\n    Charts\n  }\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// GradeView.vue?734d548b","exports = module.exports = require(\"../../node_modules/.npminstall/css-loader/0.26.4/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".mu-grade-bar{overflow:hidden;display:-webkit-box;display:-ms-flexbox;display:flex;padding:0 2em}.mu-grade-bar .grade-bar-text{color:#666;text-align:right;width:30%;padding-right:10px}.mu-grade-bar .grade-bar-progress{height:10px;margin-top:6px;width:70%;background:#d4c7eb}.mu-grade-bar .grade-bar-progress>div{background:#7e57c2;height:10px;-webkit-transition:width 1s;transition:width 1s}.mu-grade-bar .grade-bar-progress.orange{background:#ffeee8}.mu-grade-bar .grade-bar-progress.orange>div{background:#ff7245}.mu-grade-bar .grade-bar-progress.green{background:#adf9eb}.mu-grade-bar .grade-bar-progress.green>div{background:#11e2bb}.mu-grade-bar .grade-bar-progress.yellow{background:#fff2b3}.mu-grade-bar .grade-bar-progress.yellow>div{background:#ffd200}.mu-grade-bar .grade-bar-progress.blue{background:#edf3ff}.mu-grade-bar .grade-bar-progress.blue>div{background:#6da4ff}\", \"\", {\"version\":3,\"sources\":[\"D:/WorkSpace/xcl-museui/src/components/GradeBar.vue\"],\"names\":[],\"mappings\":\"AACA,cACE,gBAAiB,AACjB,oBAAqB,AACrB,oBAAqB,AACrB,aAAc,AACd,aAAe,CAChB,AACD,8BACE,WAAY,AACZ,iBAAkB,AAClB,UAAW,AACX,kBAAoB,CACrB,AACD,kCACE,YAAa,AACb,eAAgB,AAChB,UAAW,AACX,kBAAoB,CACrB,AACD,sCACE,mBAAoB,AACpB,YAAa,AACb,4BAA6B,AAC7B,mBAAqB,CACtB,AACD,yCACE,kBAAoB,CACrB,AACD,6CACE,kBAAoB,CACrB,AACD,wCACE,kBAAoB,CACrB,AACD,4CACE,kBAAoB,CACrB,AACD,yCACE,kBAAoB,CACrB,AACD,6CACE,kBAAoB,CACrB,AACD,uCACE,kBAAoB,CACrB,AACD,2CACE,kBAAoB,CACrB\",\"file\":\"GradeBar.vue\",\"sourcesContent\":[\"\\n.mu-grade-bar {\\n  overflow: hidden;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  padding: 0 2em;\\n}\\n.mu-grade-bar .grade-bar-text {\\n  color: #666;\\n  text-align: right;\\n  width: 30%;\\n  padding-right: 10px;\\n}\\n.mu-grade-bar .grade-bar-progress {\\n  height: 10px;\\n  margin-top: 6px;\\n  width: 70%;\\n  background: #d4c7eb;\\n}\\n.mu-grade-bar .grade-bar-progress > div {\\n  background: #7E57C2;\\n  height: 10px;\\n  -webkit-transition: width 1s;\\n  transition: width 1s;\\n}\\n.mu-grade-bar .grade-bar-progress.orange {\\n  background: #ffeee8;\\n}\\n.mu-grade-bar .grade-bar-progress.orange > div {\\n  background: #ff7245;\\n}\\n.mu-grade-bar .grade-bar-progress.green {\\n  background: #adf9eb;\\n}\\n.mu-grade-bar .grade-bar-progress.green > div {\\n  background: #11E2BB;\\n}\\n.mu-grade-bar .grade-bar-progress.yellow {\\n  background: #fff2b3;\\n}\\n.mu-grade-bar .grade-bar-progress.yellow > div {\\n  background: #FFD200;\\n}\\n.mu-grade-bar .grade-bar-progress.blue {\\n  background: #edf3ff;\\n}\\n.mu-grade-bar .grade-bar-progress.blue > div {\\n  background: #6DA4FF;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/css-loader/0.26.4/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.npminstall/vue-loader/11.3.4/vue-loader/lib/style-compiler?{\"id\":\"data-v-fc68dbfa\",\"scoped\":false,\"hasInlineConfig\":false}!./~/.npminstall/less-loader/4.0.3/less-loader/dist?{\"sourceMap\":true}!./~/.npminstall/vue-loader/11.3.4/vue-loader/lib/selector.js?type=styles&index=0!./src/components/GradeBar.vue\n// module id = 214\n// module chunks = 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/.npminstall/css-loader/0.26.4/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-fc68dbfa\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/.npminstall/less-loader/4.0.3/less-loader/dist/index.js?{\\\"sourceMap\\\":true}!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/selector.js?type=styles&index=0!./GradeBar.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/.npminstall/vue-style-loader/2.0.5/vue-style-loader/lib/addStylesClient.js\")(\"11bac90c\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/extract-text-webpack-plugin/2.1.0/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/.npminstall/vue-style-loader/2.0.5/vue-style-loader!./~/.npminstall/css-loader/0.26.4/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.npminstall/vue-loader/11.3.4/vue-loader/lib/style-compiler?{\"id\":\"data-v-fc68dbfa\",\"scoped\":false,\"hasInlineConfig\":false}!./~/.npminstall/less-loader/4.0.3/less-loader/dist?{\"sourceMap\":true}!./~/.npminstall/vue-loader/11.3.4/vue-loader/lib/selector.js?type=styles&index=0!./src/components/GradeBar.vue\n// module id = 221\n// module chunks = 1","\n/* styles */\nrequire(\"!!../../node_modules/.npminstall/extract-text-webpack-plugin/2.1.0/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-fc68dbfa\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/selector?type=styles&index=0!./GradeBar.vue\")\n\nvar Component = require(\"!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/selector?type=script&index=0!./GradeBar.vue\"),\n  /* template */\n  require(\"!!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-fc68dbfa\\\"}!../../node_modules/.npminstall/vue-loader/11.3.4/vue-loader/lib/selector?type=template&index=0!./GradeBar.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/GradeBar.vue\n// module id = 223\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"container\"\n  }, [_c('global-header'), _vm._v(\" \"), _c('global-footer'), _vm._v(\" \"), _c('div', {\n    staticClass: \"infinite-container\"\n  }, [_c('mu-card', [_c('mu-card-title', {\n    attrs: {\n      \"title\": _vm.data.pn,\n      \"subTitle\": \"\"\n    }\n  }), _vm._v(\" \"), _c('mu-divider'), _vm._v(\" \"), _c('div', {\n    staticClass: \"pd20\"\n  }, [_c('mu-flexbox', [_c('mu-flexbox-item', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"最新净值：\")]), _vm._v(_vm._s(_vm.data.nn) + \"\\n          \")]), _vm._v(\" \"), _c('mu-flexbox-item', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"累计净值：\")]), _vm._v(_vm._s(_vm.data.tn) + \"\\n          \")])], 1), _vm._v(\" \"), _c('mu-flexbox', [_c('mu-flexbox-item', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"产品类型：\")]), _vm._v(_vm._s(_vm.data.ic1) + \"\\n          \")]), _vm._v(\" \"), _c('mu-flexbox-item', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"成立日期：\")]), _vm._v(_vm._s(_vm.data.fd) + \"\\n          \")])], 1), _vm._v(\" \"), _c('mu-flexbox', [_c('mu-flexbox-item', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"产品状态：\")]), _vm._v(_vm._s(_vm.data.rs) + \"\\n          \")]), _vm._v(\" \"), _c('mu-flexbox-item', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"资金规模：\")]), _vm._v(_vm._s(_vm.data.is) + \"\\n          \")])], 1)], 1), _vm._v(\" \"), _c('mu-divider'), _vm._v(\" \"), _c('div', {\n    staticClass: \"mt20\"\n  }), _vm._v(\" \"), _c('grade-bar', {\n    attrs: {\n      \"percent\": _vm.gradeData.tr * 20,\n      \"title\": \"新策略评级\"\n    }\n  }), _vm._v(\" \"), _c('grade-bar', {\n    attrs: {\n      \"percent\": _vm.gradeData.nrr * 20,\n      \"theme\": \"orange\",\n      \"title\": \"抗风险\"\n    }\n  }), _vm._v(\" \"), _c('grade-bar', {\n    attrs: {\n      \"percent\": _vm.gradeData.cr * 20,\n      \"theme\": \"yellow\",\n      \"title\": \"持续性\"\n    }\n  }), _vm._v(\" \"), _c('grade-bar', {\n    attrs: {\n      \"percent\": _vm.gradeData.sr * 20,\n      \"theme\": \"green\",\n      \"title\": \"选股能力\"\n    }\n  }), _vm._v(\" \"), _c('grade-bar', {\n    attrs: {\n      \"percent\": _vm.gradeData.mtr * 20,\n      \"theme\": \"blue\",\n      \"title\": \"择时能力\"\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('mu-divider'), _vm._v(\" \"), _c('mu-sub-header', [_vm._v(\"净值走势\")]), _vm._v(\" \"), _c('charts', {\n    attrs: {\n      \"data\": _vm.stockData1\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"mt20\"\n  }), _vm._v(\" \"), _c('mu-divider'), _vm._v(\" \"), _c('mu-sub-header', [_vm._v(\"风险评估\")]), _vm._v(\" \"), _c('div', {\n    staticStyle: {\n      \"clear\": \"both\"\n    }\n  }), _vm._v(\" \"), _c('mu-table', {\n    attrs: {\n      \"showCheckbox\": false\n    }\n  }, [_c('mu-tbody', [_c('mu-tr', [_c('mu-td', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"区间段\")]), _vm._v(\" \"), _c('mu-td', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"区间收益\")]), _vm._v(\" \"), _c('mu-td', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"年化收益\")])], 1), _vm._v(\" \"), _c('mu-tr', [_c('mu-td', {\n    staticClass: \"maxlen black-link\"\n  }, [_vm._v(\"一年\")]), _vm._v(\" \"), _c('mu-td', {\n    staticClass: \"maxlen\"\n  }, [_c('color-number', {\n    attrs: {\n      \"num\": _vm.gradeData.ir2\n    }\n  })], 1), _c('mu-td', {\n    staticClass: \"maxlen\"\n  }, [_c('color-number', {\n    attrs: {\n      \"num\": _vm.gradeData.yp\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('mu-tr', [_c('mu-td', {\n    staticClass: \"maxlen black-link\"\n  }, [_vm._v(\"两年\")]), _vm._v(\" \"), _c('mu-td', {\n    staticClass: \"maxlen\"\n  }, [_c('color-number', {\n    attrs: {\n      \"num\": _vm.gradeData.tyir2\n    }\n  })], 1), _vm._v(\" \"), _c('mu-td', {\n    staticClass: \"maxlen\"\n  }, [_c('color-number', {\n    attrs: {\n      \"num\": _vm.gradeData.tyyp\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('mu-tr', [_c('mu-td', {\n    staticClass: \"maxlen black-link\"\n  }, [_vm._v(\"今年以来\")]), _vm._v(\" \"), _c('mu-td', {\n    staticClass: \"maxlen\"\n  }, [_c('color-number', {\n    attrs: {\n      \"num\": _vm.gradeData.ftir\n    }\n  })], 1), _vm._v(\" \"), _c('mu-td', {\n    staticClass: \"maxlen\"\n  }, [_c('color-number', {\n    attrs: {\n      \"num\": _vm.gradeData.ftyp\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('mu-tr', [_c('mu-td', {\n    staticClass: \"maxlen black-link\"\n  }, [_vm._v(\"两年以来\")]), _vm._v(\" \"), _c('mu-td', {\n    staticClass: \"maxlen\"\n  }, [_c('color-number', {\n    attrs: {\n      \"num\": _vm.gradeData.ftir1\n    }\n  })], 1), _vm._v(\" \"), _c('mu-td', {\n    staticClass: \"maxlen\"\n  }, [_c('color-number', {\n    attrs: {\n      \"num\": _vm.gradeData.ftyp1\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('mu-tr', [_c('mu-td', {\n    staticClass: \"maxlen black-link\"\n  }, [_vm._v(\"成立以来\")]), _vm._v(\" \"), _c('mu-td', {\n    staticClass: \"maxlen\"\n  }, [_c('color-number', {\n    attrs: {\n      \"num\": _vm.gradeData.feir\n    }\n  })], 1), _vm._v(\" \"), _c('mu-td', {\n    staticClass: \"maxlen\"\n  }, [_c('color-number', {\n    attrs: {\n      \"num\": _vm.gradeData.feyp\n    }\n  })], 1)], 1)], 1)], 1), _vm._v(\" \"), _c('mu-divider'), _vm._v(\" \"), _c('mu-sub-header', [_vm._v(\"基金经理\")]), _vm._v(\" \"), (_vm.managerData.mn) ? _c('mu-table', {\n    attrs: {\n      \"showCheckbox\": false\n    }\n  }, [_c('mu-tbody', [_c('mu-tr', [_c('mu-td', {\n    attrs: {\n      \"colspan\": \"3\"\n    }\n  }, [_vm._v(_vm._s(_vm.managerData.mn) + \" \"), _c('small', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"(\" + _vm._s(_vm.managerData.p) + \")\")])])], 1), _vm._v(\" \"), _c('mu-tr', [_c('mu-td', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"文化程度 \")]), _vm._v(_vm._s(_vm.managerData.q))]), _vm._v(\" \"), _c('mu-td', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"从业年限 \")]), _vm._v(_vm._s(_vm.managerData.wy))]), _vm._v(\" \"), _c('mu-td', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"从业背景 \")]), _vm._v(_vm._s(_vm.managerData.wb))])], 1), _vm._v(\" \"), _c('mu-tr', [_c('mu-td', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"今年收益 \")]), _vm._v(_vm._s(_vm.managerData.yai))]), _vm._v(\" \"), _c('mu-td', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"累计收益 \")]), _vm._v(_vm._s(_vm.managerData.tai))]), _vm._v(\" \"), _c('mu-td', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"管理产品 \")]), _vm._v(_vm._s(_vm.managerData.fn))])], 1), _vm._v(\" \"), _c('mu-tr', [_c('mu-td', {\n    staticStyle: {\n      \"white-space\": \"normal\",\n      \"line-height\": \"2\",\n      \"padding\": \"20px\"\n    },\n    attrs: {\n      \"colspan\": \"3\"\n    }\n  }, [_vm._v(_vm._s(_vm.managerData.cd))])], 1)], 1)], 1) : _c('div', {\n    staticClass: \"no-data\"\n  }, [_vm._v(\"暂无数据\")]), _vm._v(\" \"), _c('mu-sub-header', [_vm._v(\"基金公司\")]), _vm._v(\" \"), (_vm.teamData.cn) ? _c('mu-table', {\n    attrs: {\n      \"showCheckbox\": false\n    }\n  }, [_c('mu-tbody', [_c('mu-tr', [_c('mu-td', {\n    attrs: {\n      \"colspan\": \"2\"\n    }\n  }, [_vm._v(_vm._s(_vm.teamData.cn))])], 1), _vm._v(\" \"), _c('mu-tr', [_c('mu-td', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"备案证号 \")]), _vm._v(_vm._s(_vm.teamData.fn))]), _vm._v(\" \"), _c('mu-td', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"核心人物 \")]), _vm._v(_vm._s(_vm.teamData.cp))])], 1), _vm._v(\" \"), _c('mu-tr', [_c('mu-td', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"产品总数 \")]), _vm._v(_vm._s(_vm.teamData.ca))]), _vm._v(\" \"), _c('mu-td', [_c('span', {\n    staticClass: \"t3\"\n  }, [_vm._v(\"成立日期 \")]), _vm._v(_vm._s(_vm.teamData.ed))])], 1), _vm._v(\" \"), _c('mu-tr', [_c('mu-td', {\n    staticStyle: {\n      \"white-space\": \"normal\",\n      \"line-height\": \"2\",\n      \"padding\": \"20px\"\n    },\n    attrs: {\n      \"colspan\": \"2\"\n    }\n  }, [_vm._v(_vm._s(_vm.teamData.cd))])], 1)], 1)], 1) : _c('div', {\n    staticClass: \"no-data\"\n  }, [_vm._v(\"暂无数据\")])], 1)], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/vue-loader/11.3.4/vue-loader/lib/template-compiler?{\"id\":\"data-v-598136e9\"}!./~/.npminstall/vue-loader/11.3.4/vue-loader/lib/selector.js?type=template&index=0!./src/views/GradeView.vue\n// module id = 231\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"mu-grade-bar\"\n  }, [_c('div', {\n    staticClass: \"grade-bar-text\"\n  }, [_vm._v(_vm._s(_vm.title))]), _vm._v(\" \"), _c('div', {\n    class: ['grade-bar-progress', _vm.theme]\n  }, [_c('div', {\n    style: ('width:' + _vm.percent + '%')\n  })])])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.npminstall/vue-loader/11.3.4/vue-loader/lib/template-compiler?{\"id\":\"data-v-fc68dbfa\"}!./~/.npminstall/vue-loader/11.3.4/vue-loader/lib/selector.js?type=template&index=0!./src/components/GradeBar.vue\n// module id = 236\n// module chunks = 1"],"sourceRoot":""}